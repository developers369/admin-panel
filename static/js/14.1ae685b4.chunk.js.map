{"version":3,"sources":["Components/Profile/Profile.jsx","Dropzone.jsx","ReusableComponent/InputTag/InputTag.jsx","Redux/adminAction.js"],"names":["fullName","email","profileImg","Profile","props","handleChange","e","text","setState","target","value","salary","files","reader","FileReader","readAsDataURL","onload","result","contact","handleClick","preventDefault","updateProfile","alert","handleFile","filePreview","console","log","document","getElementById","style","display","onLoad","image","handleCrop","crop","makeCrop","canvas","createElement","scaleX","state","naturalWidth","width","scaleY","naturalHeight","height","getContext","drawImage","x","y","toDataURL","userName","password","aspect","undefined","this","cookies","get","history","push","admin","className","InputTag","inputClass","type","inputText","disabled","placeHolder","onChange","passFile","cropImage","Button","btnclass","btnName","onClick","id","src","onImageLoaded","Component","connect","dispatch","withCookies","thumbsContainer","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","marginRight","marginLeft","padding","boxSizing","thumbInner","minWidth","overflow","img","Previews","useState","setFilePreview","useDropzone","accept","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","thumbs","alt","justifyContent","alignItems","textAlign","placeholder","onKeyUp","name","login","LOGIN","payload","UPDATE_PROFILE","addUser","avatar","ADD_USER","updateUser","updateId","UPDATE_USER","deleteUser","deleteId","DELETE_USER","deleteUsers","deletedIdArray","DELETE_USERS","changeStatus","CHANGE_STATUS"],"mappings":"iLAcIA,EAAUC,EAAOC,E,6IACfC,E,kDAMF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAsCVC,aAAe,SAACC,EAAGC,GAEf,GAAY,aAATA,EACC,EAAKC,SAAS,CAACR,SAAUM,EAAEG,OAAOC,aAGjC,GAAY,UAATH,EACJ,EAAKC,SAAS,CAACG,OAAQL,EAAEG,OAAOC,aAG/B,GAAY,SAATH,EAAgB,CACpB,IAAIK,EAAQN,EAAEG,OAAOG,MAEjBC,EAAS,IAAIC,WACjBD,EAAOE,cAAcH,EAAM,IAE3BC,EAAOG,OAAS,SAACV,GAEb,EAAKE,SAAS,CAACN,WAAaI,EAAEG,OAAOQ,cAI5B,YAATV,GACJ,EAAKC,SAAS,CAACU,QAASZ,EAAEG,OAAOC,SA9DtB,EAmEnBS,YAAc,SAACb,GACXA,EAAEc,iBACF,EAAKhB,MAAMiB,gBACXC,MAAM,iCAtES,EAyEnBC,WAAa,SAACC,GACVC,QAAQC,IAAI,mBAAmBF,GAC/B,EAAKhB,SAAS,CAACN,WAAYsB,IAC3BG,SAASC,eAAe,cAAcC,MAAMC,QAAQ,SA5ErC,EA+EnBC,OAAS,SAACC,GACN,EAAKxB,SAAS,CAACwB,MAAOA,KAhFP,EAmFnBC,WAAa,SAACC,GACV,EAAK1B,SAAS,CAAC0B,KAAOA,KApFP,EAwFnBC,SAAW,WAEP,IAAMC,EAAST,SAASU,cAAc,UAChCC,EAAS,EAAKC,MAAMP,MAAMQ,aAAgB,EAAKD,MAAMP,MAAMS,MAC3DC,EAAU,EAAKH,MAAMP,MAAMW,cAAiB,EAAKJ,MAAMP,MAAMY,OACnER,EAAOK,MAAS,EAAKF,MAAML,KAAKO,MAChCL,EAAOQ,OAAU,EAAKL,MAAML,KAAKU,OACrBR,EAAOS,WAAW,MAG1BC,UACA,EAAKP,MAAMP,MACX,EAAKO,MAAML,KAAKa,EAAIT,EACpB,EAAKC,MAAML,KAAKc,EAAIN,EACpB,EAAKH,MAAML,KAAKO,MAAQH,EACxB,EAAKC,MAAML,KAAKU,OAASF,EACzB,EACA,EACA,EAAKH,MAAML,KAAKO,MAChB,EAAKF,MAAML,KAAKU,QAKK,IAAtB,EAAKL,MAAML,KAAKa,EACf,EAAKvC,SAAS,CAACN,WAAY,EAAKqC,MAAMrC,aAEtC,EAAKM,SAAS,CAACN,WAAYkC,EAAOa,UAAU,gBAGhDtB,SAASC,eAAe,cAAcC,MAAMC,QAAQ,QApHpD,EAAKS,MAAQ,CACTvC,SAAU,GACVC,MAAO,GACPiD,SAAU,GACVC,SAAU,GACVjD,WAAY,KACZ8B,MAAO,KACPE,KAAM,CACFkB,OAAQ,GAAG,IAVJ,E,sDAenB,gBAG+BC,IAFTC,KAAKlD,MAAhBmD,QAEIC,IAAI,SACXF,KAAKlD,MAAMqD,QAAQC,KAAK,O,+BAIhC,WAEIJ,KAAK9C,SAAS,CACV0C,SAAUI,KAAKlD,MAAMuD,MAAMT,SAC3BlD,SAAUsD,KAAKlD,MAAMuD,MAAM3D,SAC3BC,MAAOqD,KAAKlD,MAAMuD,MAAM1D,MACxBC,WAAYoD,KAAKlD,MAAMuD,MAAMzD,e,gCAIrC,WACIF,EAAWsD,KAAKf,MAAMvC,SACtBC,EAAQqD,KAAKf,MAAMtC,MACnBC,EAAaoD,KAAKf,MAAMrC,a,oBAqF5B,WAAU,IAAD,OACL,OAEI,qCACI,cAAC,IAAD,IACA,sBAAK0D,UAAU,cAAf,UACI,uBAAMA,UAAU,eAAhB,UACI,+CAEA,sBAAKA,UAAU,aAAf,UACI,8CADJ,IAC6B,uBAEzB,cAACC,EAAA,EAAD,CACIC,WAAW,WACXC,KAAK,OACLC,UAAWV,KAAKf,MAAMW,SACtBe,UAAU,OAMlB,sBAAKL,UAAU,aAAf,UACI,8CADJ,IAC6B,uBAEzB,cAACC,EAAA,EAAD,CACIC,WAAW,WACXC,KAAK,OACLC,UAAWV,KAAKf,MAAMvC,SACtBkE,YAAY,kBACZC,SAAU,SAAC7D,GAAD,OAAO,EAAKD,aAAaC,EAAG,kBAK9C,sBAAKsD,UAAU,aAAf,UAEI,0CAFJ,IAEyB,uBAErB,cAACC,EAAA,EAAD,CACIC,WAAW,WACXC,KAAK,QACLC,UAAWV,KAAKf,MAAMtC,MACtBiE,YAAY,cACZC,SAAU,SAAC7D,GAAD,OAAO,EAAKD,aAAaC,EAAG,eAO9C,qBAAKsD,UAAU,aAAf,SAYI,cAAC,IAAD,CACIQ,SAAUd,KAAK/B,WACf8C,UAAWf,KAAKf,MAAMrC,eAM9B,qBAAK0D,UAAU,qBAAf,SAEI,cAACU,EAAA,EAAD,CACIC,SAAS,wBACTC,QAAQ,SACRC,QAAS,SAACnE,GAAD,OAAO,EAAKa,YAAYb,WAO7C,qBAAKoE,GAAG,aAAad,UAAU,QAA/B,SAEI,sBAAKA,UAAU,gBAAf,UACI,sBAAKA,UAAU,eAAf,UAEI,2CACA,sBAAMA,UAAU,QAAQa,QAAS,kBAAM9C,SAASC,eAAe,cAAcC,MAAMC,QAAQ,QAA3F,qBAEJ,qBAAK8B,UAAU,aAAf,SACI,cAAC,IAAD,CAAWe,IAAKrB,KAAKf,MAAMrC,WAAY0E,cAAetB,KAAKvB,OAAQG,KAAMoB,KAAKf,MAAML,KAAMiC,SAAUb,KAAKrB,eAE7G,qBAAK2B,UAAU,eAAf,SACI,sBAAKA,UAAU,aAAf,UACI,cAACU,EAAA,EAAD,CACIC,SAAS,cACTC,QAAQ,aACRC,QAASnB,KAAKnB,WAGlB,cAACmC,EAAA,EAAD,CACIC,SAAS,gBACTC,QAAQ,SACRC,QAAS,kBAAM9C,SAASC,eAAe,cAAcC,MAAMC,QAAQ,8B,GAxOrF+C,aAuQPC,eAfS,SAAAvC,GAEpB,OADAd,QAAQC,IAAIa,GACN,CACFoB,MAAOpB,EAAMoB,UAIM,SAAAoB,GACvB,MAAM,CACF1D,cAAe,kBAAM0D,EAAS1D,YAAcrB,EAAUC,EAAOC,QAMtD4E,CAA6CE,YAAY7E,K,2ECnRlE8E,EAAkB,CACtBnD,QAAS,OACToD,cAAe,MACfC,SAAU,OACVC,UAAW,IAGPC,EAAQ,CACZvD,QAAS,cACTwD,aAAc,EACdC,OAAQ,oBACRC,aAAc,EACdC,YAAa,EACbC,WAAY,GACZjD,MAAO,IACPG,OAAQ,IACR+C,QAAS,EACTC,UAAW,cAGPC,EAAa,CACjB/D,QAAS,OACTgE,SAAU,EACVC,SAAU,UAGNC,EAAM,CACVlE,QAAS,QACTW,MAAO,OACPG,OAAQ,QA8DKqD,IA1Df,SAAkB7F,GAChB,MAAsC8F,mBAAS,IAA/C,mBAAoBC,GAApB,WAIA,EAAsCC,YAAY,CAChDC,OAAQ,UACRC,OAAQ,SAAAC,GAGNA,EAAcC,KAAI,SAAAC,GAAI,OAAIhF,QAAQC,IAAI+E,MACtCF,EAAcC,KAAI,SAAAC,GAAI,OAAIC,OAAOC,OAAOF,EAAM,CAC5CG,QAASC,IAAIC,gBAAgBL,QAE/BhF,QAAQC,IAAI6E,EAAc,GAAGK,SAC7BT,EAAeI,EAAc,GAAGK,SAChCxG,EAAMgE,SAASmC,EAAc,GAAGK,YAX7BG,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAgBfC,EACJ,qBAAKpF,MAAOwD,EAAZ,SACE,qBAAKxD,MAAOgE,EAAZ,SACE,qBACElB,IAAKvE,EAAMiE,UACXxC,MAAOmE,EACPkB,IAAI,gBAaZ,OAEE,0BAAStD,UAAU,YAAY/B,MAAO,CAAC0D,OAAQ,aAAczD,QAAS,OAAQqF,eAAgB,gBAAiBC,WAAY,UAA3H,UACE,gDAASL,EAAa,CAACnD,UAAW,cAAlC,IAAgD/B,MAAO,CAACY,MAAO,OAAQ4E,UAAW,UAAlF,UACE,qCAAWL,MACX,mBAAGpD,UAAU,WAAb,2CAGoB,OAApBxD,EAAMiE,WAAsB,uBAAOxC,MAAOoD,EAAd,SAC3BgC,S,4HCtDMpD,E,kDA3BX,WAAYzD,GAAQ,IAAD,8BACf,cAAMA,IACDmC,MAAQ,CACTyB,UAAY,IAHD,E,0CAQnB,WACI,OACI,uBACIU,GAAIpB,KAAKlD,MAAMsE,GACfd,UAAWN,KAAKlD,MAAM0D,WACtBC,KAAMT,KAAKlD,MAAM2D,KACjBrD,MAAO4C,KAAKlD,MAAM4D,UAClBsD,YAAahE,KAAKlD,MAAM8D,YACxBC,SAAUb,KAAKlD,MAAM+D,SACrBoD,QAASjE,KAAKlD,MAAMmH,QACpBtD,SAAUX,KAAKlD,MAAM6D,SACrBQ,QAASnB,KAAKlD,MAAMqE,QACpB+C,KAAMlE,KAAKlD,MAAMoH,W,GArBV3C,c,qDCHvB,yPAEO,SAAS4C,EAAMvE,EAAUC,GAE5B,MAAM,CACFY,KAAM2D,IACNC,QAAS,CACLzE,WACAC,aAKL,SAAS9B,EAAcrB,EAAUC,EAAOC,GAE3C,MAAM,CACF6D,KAAM6D,IACND,QAAS,CACL3H,WACAC,QACAC,eAML,SAAS2H,EAAQ7H,EAAUW,EAAQV,EAAOiB,EAAS4G,GAEtD,OADArG,QAAQC,IAAIoG,GACN,CACF/D,KAAMgE,IACNJ,QAAS,CACL3H,WACAW,SACAV,QACAiB,UACA4G,WAML,SAASE,EAAWC,EAAUjI,EAAUW,EAAQV,EAAOiB,EAAS4G,GAEnE,MAAM,CACF/D,KAAMmE,IACNP,QAAS,CACLM,WACAjI,WACAW,SACAV,QACAiB,UACA4G,WAKL,SAASK,EAAWC,GAEvB,MAAM,CACFrE,KAAMsE,IACNV,QAASS,GAIV,SAASE,EAAYC,GAExB,MAAM,CACFxE,KAAMyE,IACNb,QAASY,GAIV,SAASE,EAAa/D,GAEzB,MAAM,CACFX,KAAM2E,IACNf,QAASjD,K","file":"static/js/14.1ae685b4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux'\nimport {withCookies, Cookies } from 'react-cookie';\nimport { instanceOf } from 'prop-types';\nimport Button from '../../ReusableComponent/Button';\nimport InputTag from '../../ReusableComponent/InputTag';\nimport './Profile.scss'\nimport {updateProfile} from '../../Redux/adminAction';\nimport Previews from '../../Dropzone';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/lib/ReactCrop.scss';\nimport { NewHeader } from '../Dashboard/Dashboard';\n\n\nlet fullName, email, profileImg\nclass Profile extends Component {\n\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            fullName: \"\",\n            email: \"\",\n            userName: \"\",\n            password: \"\",\n            profileImg: null,\n            image: null,\n            crop: {\n                aspect: 16/9\n            },\n        }\n    }\n\n    componentWillMount(){\n        const {cookies} = this.props\n        \n        if(cookies.get(\"Name\") === undefined){\n            this.props.history.push(\"/\")\n        }\n    }\n\n    componentDidMount(){\n\n        this.setState({\n            userName: this.props.admin.userName,\n            fullName: this.props.admin.fullName,\n            email: this.props.admin.email,\n            profileImg: this.props.admin.profileImg\n        })\n    }\n\n    componentDidUpdate(){\n        fullName = this.state.fullName\n        email = this.state.email\n        profileImg = this.state.profileImg\n    }\n\n    handleChange = (e, text) => {\n        \n        if(text === \"fullName\"){\n            this.setState({fullName: e.target.value})\n        }\n\n        else if(text === \"email\"){\n            this.setState({salary: e.target.value})\n        }\n\n        else if(text === \"file\"){\n            let files = e.target.files\n\n            let reader = new FileReader()\n            reader.readAsDataURL(files[0])\n\n            reader.onload = (e) => {\n\n                this.setState({profileImg : e.target.result})\n            }\n        }\n\n        else if(text === \"contact\"){\n            this.setState({contact: e.target.value})\n        }\n\n    }\n\n    handleClick = (e) => {\n        e.preventDefault()\n        this.props.updateProfile()\n        alert(\"Profile Updated Successfully\")\n    }\n\n    handleFile = (filePreview) => {\n        console.log(\"show popup......\",filePreview);\n        this.setState({profileImg: filePreview})\n        document.getElementById(\"popUpModal\").style.display=\"block\"\n    }\n\n    onLoad = (image) => {\n        this.setState({image: image})\n    }\n\n    handleCrop = (crop) => {\n        this.setState({crop : crop})\n    }\n\n\n    makeCrop = () => {\n        //alert(\"hello\")\n        const canvas = document.createElement('canvas');\n        const scaleX = this.state.image.naturalWidth /  this.state.image.width;\n        const scaleY =  this.state.image.naturalHeight /  this.state.image.height;\n        canvas.width =  this.state.crop.width;\n        canvas.height =  this.state.crop.height;\n        const ctx = canvas.getContext('2d');\n       \n        \n        ctx.drawImage(\n            this.state.image,\n            this.state.crop.x * scaleX,\n            this.state.crop.y * scaleY,\n            this.state.crop.width * scaleX,\n            this.state.crop.height * scaleY,\n            0,\n            0,\n            this.state.crop.width,\n            this.state.crop.height,\n        );\n\n        // this.setState({cropImage: canvas.toDataURL(\"image/jpeg\")})\n\n        if(this.state.crop.x === 0){\n            this.setState({profileImg: this.state.profileImg})\n        }else{\n            this.setState({profileImg: canvas.toDataURL(\"image/jpeg\")})\n        }\n       // console.log(\"handle\", canvas.toDataURL(\"image/jpeg\"));\n        document.getElementById(\"popUpModal\").style.display=\"none\"\n    }\n\n    render() { \n        return ( \n\n            <>\n                <NewHeader />\n                <div className=\"profile-div\">\n                    <form className=\"profile-form\">\n                        <h2>Admin Profile</h2>\n\n                        <div className=\"form-items\">\n                            <label>User Name</label> <br></br>\n                            {/* <i className=\"fa fa-user\" aria-hidden=\"true\"></i> */}\n                            <InputTag\n                                inputClass=\"inputTag\"\n                                type=\"text\"\n                                inputText={this.state.userName}\n                                disabled={true}\n                            />\n                            \n                        </div>\n\n\n                        <div className=\"form-items\">\n                            <label>Full Name</label> <br></br>\n                            {/* <i className=\"fa fa-user\" aria-hidden=\"true\"></i> */}\n                            <InputTag\n                                inputClass=\"inputTag\"\n                                type=\"text\"\n                                inputText={this.state.fullName}\n                                placeHolder=\"Enter full name\"\n                                onChange={(e) => this.handleChange(e, \"fullName\")}\n                            />\n                            \n                        </div>\n                \n                        <div className=\"form-items\">\n                            \n                            <label>Email</label> <br></br>\n                            {/* <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i> */}\n                            <InputTag\n                                inputClass=\"inputTag\"\n                                type=\"email\"\n                                inputText={this.state.email}\n                                placeHolder=\"Enter email\"\n                                onChange={(e) => this.handleChange(e, \"email\")}\n                            />\n                        </div>\n\n                        \n                        \n\n                        <div className=\"form-items\">\n                            {/* <label className=\"label-profile-img\">Profile Image<sup style={{color: \"red\"}}>*</sup></label> <br></br>\n\n                            {this.state.profileImg && <div className=\"img-preview\" style={{width : \"50px\", height : \"50px\", marginBottom : \"0px\"}}>\n                                \n                                <img src={this.state.profileImg === null ? \"\" : this.state.profileImg} alt=\"Profile\" style={{width : \"100%\", height: \"auto\"}}/>\n                            </div>}\n                            <InputTag\n                                inputClass=\"inputTagFile\"\n                                type=\"file\"\n                                onChange={(e) => this.handleChange(e, \"file\")}\n                            /> */}\n                            <Previews \n                                passFile={this.handleFile} \n                                cropImage={this.state.profileImg}\n                            />\n                            {/* <input id=\"i\" type=\"file\" onChange={this.handleFile}/> */}\n                        </div>\n\n\n                        <div className=\"profile-button-div\">\n\n                            <Button\n                                btnclass=\"profile-action-button\"\n                                btnName=\"Update\"\n                                onClick={(e) => this.handleClick(e)}\n                            />\n\n                        </div>\n                    </form>\n\n                \n                    <div id=\"popUpModal\" className=\"modal\">\n\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                \n                                <p>Crop Image</p>\n                                <span className=\"close\" onClick={() => document.getElementById(\"popUpModal\").style.display=\"none\"}>&times;</span>\n                            </div>\n                            <div className=\"modal-body\">\n                                <ReactCrop src={this.state.profileImg} onImageLoaded={this.onLoad} crop={this.state.crop} onChange={this.handleCrop} />\n                            </div>\n                            <div className=\"modal-footer\">\n                                <div className=\"footer-btn\">\n                                    <Button\n                                        btnclass=\"footer-crop\"\n                                        btnName=\"Crop Image\"\n                                        onClick={this.makeCrop}\n                                    />\n\n                                    <Button\n                                        btnclass=\"footer-cancel\"\n                                        btnName=\"Cancel\"\n                                        onClick={() => document.getElementById(\"popUpModal\").style.display=\"none\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                \n                </div>\n            </>\n\n        );\n    }\n}\n\n\nconst mapStateToProps = state => {\n    console.log(state);\n    return{\n        admin: state.admin\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        updateProfile: () => dispatch(updateProfile(fullName, email, profileImg)),\n        // fetchUsers: () => dispatch(fetchUsers())\n    }\n}\n\n \nexport default connect(mapStateToProps, mapDispatchToProps)(withCookies(Profile));","import React, {useEffect, useState} from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\n\r\nconst thumbsContainer = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  flexWrap: 'wrap',\r\n  marginTop: 16\r\n};\r\n\r\nconst thumb = {\r\n  display: 'inline-flex',\r\n  borderRadius: 2,\r\n  border: '1px solid #eaeaea',\r\n  marginBottom: 8,\r\n  marginRight: 8,\r\n  marginLeft: 20,\r\n  width: 100,\r\n  height: 100,\r\n  padding: 4,\r\n  boxSizing: 'border-box'\r\n};\r\n\r\nconst thumbInner = {\r\n  display: 'flex',\r\n  minWidth: 0,\r\n  overflow: 'hidden'\r\n};\r\n\r\nconst img = {\r\n  display: 'block',\r\n  width: '100%',\r\n  height: '100%'\r\n};\r\n\r\n\r\nfunction Previews(props) {\r\n  const [filePreview, setFilePreview] = useState(\"\");\r\n  \r\n\r\n  // const [popupClass, setPopupClass] = useState(\"modal\")\r\n  const {getRootProps, getInputProps} = useDropzone({\r\n    accept: 'image/*',\r\n    onDrop: acceptedFiles => {\r\n      \r\n\r\n      acceptedFiles.map(file => console.log(file))\r\n      acceptedFiles.map(file => Object.assign(file, {\r\n        preview: URL.createObjectURL(file)\r\n      }));\r\n      console.log(acceptedFiles[0].preview);\r\n      setFilePreview(acceptedFiles[0].preview)\r\n      props.passFile(acceptedFiles[0].preview)    \r\n\r\n    }\r\n  });\r\n  \r\n  const thumbs = \r\n    <div style={thumb}>\r\n      <div style={thumbInner}>\r\n        <img\r\n          src={props.cropImage}\r\n          style={img}\r\n          alt=\"Preview\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n  \r\n\r\n  // useEffect(() => () => {\r\n  //   // Make sure to revoke the data uris to avoid memory leaks\r\n    \r\n  //   URL.revokeObjectURL(filePreview);\r\n  // }, [filePreview]);\r\n\r\n  return (\r\n\r\n    <section className=\"container\" style={{border: \"1px dashed\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\"}}>\r\n      <div {...getRootProps({className: 'dropzone'})} style={{width: \"120%\", textAlign: \"center\"}}>\r\n        <input {...getInputProps()} />\r\n        <p className=\"dropText\">Drop File Heres to Upload</p>\r\n      </div>\r\n    \r\n      { props.cropImage !== null && <aside style={thumbsContainer}>\r\n        {thumbs}\r\n      </aside>}\r\n      \r\n    </section>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default Previews;","import React, { Component } from 'react';\nimport './InputTag.scss'\n\nclass InputTag extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            inputText : \"\"\n        };\n    }\n\n    \n    render() {\n        return (\n            <input\n                id={this.props.id} \n                className={this.props.inputClass} \n                type={this.props.type} \n                value={this.props.inputText} \n                placeholder={this.props.placeHolder} \n                onChange={this.props.onChange} \n                onKeyUp={this.props.onKeyUp}\n                disabled={this.props.disabled} \n                onClick={this.props.onClick}\n                name={this.props.name}\n            />\n           \n        );\n    }\n}\n\nexport default InputTag;","import {LOGIN, UPDATE_PROFILE, ADD_USER, UPDATE_USER, DELETE_USER, DELETE_USERS, CHANGE_STATUS, FETCH_USERS} from './actionType'\n\nexport function login(userName, password){\n    // console.log(userName);\n    return{\n        type: LOGIN,\n        payload: {\n            userName,\n            password\n        }\n    }\n}\n\nexport function updateProfile(fullName, email, profileImg){\n    // console.log(userName);\n    return{\n        type: UPDATE_PROFILE,\n        payload: {\n            fullName,\n            email,\n            profileImg\n        }\n    }\n}\n\n\nexport function addUser(fullName, salary, email, contact, avatar){\n    console.log(avatar);\n    return{\n        type: ADD_USER,\n        payload: {\n            fullName,\n            salary,\n            email,\n            contact,\n            avatar\n        }\n    }\n}\n\n\nexport function updateUser(updateId, fullName, salary, email, contact, avatar){\n    \n    return{\n        type: UPDATE_USER,\n        payload: {\n            updateId,\n            fullName,\n            salary,\n            email,\n            contact,\n            avatar\n        }\n    }\n}\n\nexport function deleteUser(deleteId){\n    // console.log(deleteId);\n    return{\n        type: DELETE_USER,\n        payload: deleteId\n    }\n}\n\nexport function deleteUsers(deletedIdArray){\n    // console.log(deleteId);\n    return{\n        type: DELETE_USERS,\n        payload: deletedIdArray\n    }\n}\n\nexport function changeStatus(id){\n    // console.log(deleteId);\n    return{\n        type: CHANGE_STATUS,\n        payload: id\n    }\n}\n\nexport function fetchUsers(fullName, salary, email, contact, avatar){\n    console.log(avatar);\n    return{\n        type: FETCH_USERS,\n    }\n}\n"],"sourceRoot":""}