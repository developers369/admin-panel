{"version":3,"sources":["../node_modules/webpack/buildin/module.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/react-tooltip/node_modules/uuid/dist/esm-browser/rng.js","../node_modules/react-tooltip/node_modules/uuid/dist/esm-browser/bytesToUuid.js","../node_modules/react-tooltip/node_modules/uuid/dist/esm-browser/v4.js","../../src/constant.js","../../src/decorators/staticMethods.js","../../src/decorators/customEvent.js","../../src/decorators/bodyMode.js","../../src/utils/getPosition.js","../../src/utils/getTipContent.js","../../src/utils/aria.js","../../src/utils/nodeListToArray.js","../../src/decorators/defaultStyles.js","../../src/decorators/styler.js","../../src/decorators/trackRemoval.js","../../src/index.js","../../src/decorators/windowListener.js","../../src/decorators/isCapture.js","../../src/decorators/getEffect.js","../../src/utils/uuid.js","../node_modules/classnames/index.js"],"names":["module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","componentWillMount","state","this","constructor","getDerivedStateFromProps","props","undefined","setState","componentWillReceiveProps","nextProps","prevState","bind","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","prototype","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","name","newApiName","componentDidUpdate","maybeSnapshot","snapshot","call","__suppressDeprecationWarning","getRandomValues","crypto","msCrypto","rnds8","Uint8Array","rng","byteToHex","toString","substr","bytesToUuid","buf","offset","bth","join","v4","options","Array","rnds","random","ii","HIDE","REBUILD","SHOW","dispatchGlobalEvent","eventName","opts","window","event","detail","document","checkStatus","show","id","isCapture","e","currentItem","hideTooltip","setUntargetItems","getTargetArray","targetArray","currentTarget","customListeners","set","target","map","configurable","value","bodyListener","respectEffect","customEvent","tip","forId","isCustomEvent","isTargetBelongsToTooltip","getEffect","proxy","makeProxy","callback","findCustomEvents","dataAttribute","events","getBody","getDimensions","tipWidth","tipHeight","targetWidth","targetHeight","getCurrentOffset","mouseX","mouseY","defaultOffset","getDefaultPosition","calculateOffset","extraOffsetX","extraOffsetY","windowWidth","windowHeight","getParent","parentTop","parentLeft","getTipOffsetLeft","place","offsetX","getTipOffsetTop","offsetY","outsideRight","p","getTipOffsetRight","outsideBottom","getTipOffsetBottom","outside","outsideLeft","outsideTop","inside","placesList","insideList","isNewState","shouldUpdatePlace","desiredPlace","newPlace","newState","position","left","parseInt","top","node","height","width","effect","boundingClientRect","targetTop","targetLeft","clientY","r","t","b","bottom","disToMouse","right","JSON","key","currentParent","computedStyle","getContent","regexp","multiline","className","parseAria","ariaObj","prop","test","length","nodeList","fill","index","defaultColors","dark","text","background","border","arrow","success","warning","error","info","light","generateTooltipStyle","uuid","customColors","type","hasBorder","colors","textColor","backgroundColor","borderColor","arrowColor","generateStyle","getDefaultPopupColors","getPopupColors","ReactTooltip","CONSTANT","hasTarget","staticMethods","windowListener","ele","eventOff","dataEvent","dataEventOff","customListener","dataEffect","possibleCustomEvents","possibleCustomEventsOff","body","customEvents","customEventsOff","listeners","bodyModeListeners","targetEventOff","bodyMode","trackRemoval","extraClass","html","delayHide","delayShow","currentEvent","ariaProps","isEmptyTip","disable","originTooltip","isMultiline","PropTypes","insecure","class","delayUpdate","globalEventOff","afterShow","afterHide","overridePosition","scrollHide","resizeHide","wrapper","clickable","bool","methodArray","method","tooltipRef","parentNode","domRoot","style","matches","escaped","selector","nodeListToArray","element","isCaptureMode","content","getTipContent","placeholder","isGlobalCall","switchToSolid","result","getPosition","reshowDelay","self","updateState","setInterval","setTimeout","eventTarget","delayTime","isInvisible","clearTimeout","isScroll","isMyElement","resetState","isVisible","clearInterval","Boolean","color","tooltipClass","hasCustomColors","Wrapper","wrapperClassName","htmlContent","ref","data-id","dangerouslySetInnerHTML","__html","newAriaProps","React","MutationObserver","observer","mutations","m1","mutation","m2","childList","subtree","hasOwn","hasOwnProperty","classNames","classes","arguments","arg","argType","push","isArray","inner","apply","default"],"mappings":"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","file":"static/js/2.15f56b65.chunk.js","sourcesContent":["module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nexport default bytesToUuid;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nexport default v4;","export default {\n  GLOBAL: {\n    HIDE: '__react_tooltip_hide_event',\n    REBUILD: '__react_tooltip_rebuild_event',\n    SHOW: '__react_tooltip_show_event'\n  }\n};\n","/**\n * Static methods for react-tooltip\n */\nimport CONSTANT from '../constant';\n\nconst dispatchGlobalEvent = (eventName, opts) => {\n  // Compatible with IE\n  // @see http://stackoverflow.com/questions/26596123/internet-explorer-9-10-11-event-constructor-doesnt-work\n  // @see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n  let event;\n\n  if (typeof window.CustomEvent === 'function') {\n    event = new window.CustomEvent(eventName, { detail: opts });\n  } else {\n    event = document.createEvent('Event');\n    event.initEvent(eventName, false, true, opts);\n  }\n\n  window.dispatchEvent(event);\n};\n\nexport default function(target) {\n  /**\n   * Hide all tooltip\n   * @trigger ReactTooltip.hide()\n   */\n  target.hide = target => {\n    dispatchGlobalEvent(CONSTANT.GLOBAL.HIDE, { target });\n  };\n\n  /**\n   * Rebuild all tooltip\n   * @trigger ReactTooltip.rebuild()\n   */\n  target.rebuild = () => {\n    dispatchGlobalEvent(CONSTANT.GLOBAL.REBUILD);\n  };\n\n  /**\n   * Show specific tooltip\n   * @trigger ReactTooltip.show()\n   */\n  target.show = target => {\n    dispatchGlobalEvent(CONSTANT.GLOBAL.SHOW, { target });\n  };\n\n  target.prototype.globalRebuild = function() {\n    if (this.mount) {\n      this.unbindListener();\n      this.bindListener();\n    }\n  };\n\n  target.prototype.globalShow = function(event) {\n    if (this.mount) {\n      const hasTarget =\n        (event && event.detail && event.detail.target && true) || false;\n      // Create a fake event, specific show will limit the type to `solid`\n      // only `float` type cares e.clientX e.clientY\n      this.showTooltip(\n        { currentTarget: hasTarget && event.detail.target },\n        true\n      );\n    }\n  };\n\n  target.prototype.globalHide = function(event) {\n    if (this.mount) {\n      const hasTarget =\n        (event && event.detail && event.detail.target && true) || false;\n      this.hideTooltip(\n        { currentTarget: hasTarget && event.detail.target },\n        hasTarget\n      );\n    }\n  };\n}\n","/**\n * Custom events to control showing and hiding of tooltip\n *\n * @attributes\n * - `event` {String}\n * - `eventOff` {String}\n */\n\nexport const checkStatus = function(dataEventOff, e) {\n  const { show } = this.state;\n  const { id } = this.props;\n  const isCapture = this.isCapture(e.currentTarget);\n  const currentItem = e.currentTarget.getAttribute('currentItem');\n\n  if (!isCapture) e.stopPropagation();\n  if (show && currentItem === 'true') {\n    if (!dataEventOff) this.hideTooltip(e);\n  } else {\n    e.currentTarget.setAttribute('currentItem', 'true');\n    setUntargetItems(e.currentTarget, this.getTargetArray(id));\n    this.showTooltip(e);\n  }\n};\n\nconst setUntargetItems = function(currentTarget, targetArray) {\n  for (let i = 0; i < targetArray.length; i++) {\n    if (currentTarget !== targetArray[i]) {\n      targetArray[i].setAttribute('currentItem', 'false');\n    } else {\n      targetArray[i].setAttribute('currentItem', 'true');\n    }\n  }\n};\n\nconst customListeners = {\n  id: '9b69f92e-d3fe-498b-b1b4-c5e63a51b0cf',\n  set(target, event, listener) {\n    if (this.id in target) {\n      const map = target[this.id];\n      map[event] = listener;\n    } else {\n      // this is workaround for WeakMap, which is not supported in older browsers, such as IE\n      Object.defineProperty(target, this.id, {\n        configurable: true,\n        value: { [event]: listener }\n      });\n    }\n  },\n  get(target, event) {\n    const map = target[this.id];\n    if (map !== undefined) {\n      return map[event];\n    }\n  }\n};\n\nexport default function(target) {\n  target.prototype.isCustomEvent = function(ele) {\n    const { event } = this.state;\n    return event || !!ele.getAttribute('data-event');\n  };\n\n  /* Bind listener for custom event */\n  target.prototype.customBindListener = function(ele) {\n    const { event, eventOff } = this.state;\n    const dataEvent = ele.getAttribute('data-event') || event;\n    const dataEventOff = ele.getAttribute('data-event-off') || eventOff;\n\n    dataEvent.split(' ').forEach(event => {\n      ele.removeEventListener(event, customListeners.get(ele, event));\n      const customListener = checkStatus.bind(this, dataEventOff);\n      customListeners.set(ele, event, customListener);\n      ele.addEventListener(event, customListener, false);\n    });\n    if (dataEventOff) {\n      dataEventOff.split(' ').forEach(event => {\n        ele.removeEventListener(event, this.hideTooltip);\n        ele.addEventListener(event, this.hideTooltip, false);\n      });\n    }\n  };\n\n  /* Unbind listener for custom event */\n  target.prototype.customUnbindListener = function(ele) {\n    const { event, eventOff } = this.state;\n    const dataEvent = event || ele.getAttribute('data-event');\n    const dataEventOff = eventOff || ele.getAttribute('data-event-off');\n\n    ele.removeEventListener(dataEvent, customListeners.get(ele, event));\n    if (dataEventOff) ele.removeEventListener(dataEventOff, this.hideTooltip);\n  };\n}\n","/**\n * Util method to get effect\n */\nimport { checkStatus } from './customEvent';\n\nconst makeProxy = e => {\n  const proxy = {};\n  for (const key in e) {\n    if (typeof e[key] === 'function') {\n      proxy[key] = e[key].bind(e);\n    } else {\n      proxy[key] = e[key];\n    }\n  }\n  return proxy;\n};\n\nconst bodyListener = function(callback, options, e) {\n  const { respectEffect = false, customEvent = false } = options;\n  const { id } = this.props;\n\n  const tip = e.target.getAttribute('data-tip') || null;\n  const forId = e.target.getAttribute('data-for') || null;\n\n  const target = e.target;\n  if (this.isCustomEvent(target) && !customEvent) {\n    return;\n  }\n\n  const isTargetBelongsToTooltip =\n    (id == null && forId == null) || forId === id;\n\n  if (\n    tip != null &&\n    (!respectEffect || this.getEffect(target) === 'float') &&\n    isTargetBelongsToTooltip\n  ) {\n    const proxy = makeProxy(e);\n    proxy.currentTarget = target;\n    callback(proxy);\n  }\n};\n\nconst findCustomEvents = (targetArray, dataAttribute) => {\n  const events = {};\n  targetArray.forEach(target => {\n    const event = target.getAttribute(dataAttribute);\n    if (event) event.split(' ').forEach(event => (events[event] = true));\n  });\n\n  return events;\n};\n\nconst getBody = () => document.getElementsByTagName('body')[0];\n\nexport default function(target) {\n  target.prototype.isBodyMode = function() {\n    return !!this.props.bodyMode;\n  };\n\n  target.prototype.bindBodyListener = function(targetArray) {\n    const {\n      event,\n      eventOff,\n      possibleCustomEvents,\n      possibleCustomEventsOff\n    } = this.state;\n    const body = getBody();\n\n    const customEvents = findCustomEvents(targetArray, 'data-event');\n    const customEventsOff = findCustomEvents(targetArray, 'data-event-off');\n\n    if (event != null) customEvents[event] = true;\n    if (eventOff != null) customEventsOff[eventOff] = true;\n    possibleCustomEvents\n      .split(' ')\n      .forEach(event => (customEvents[event] = true));\n    possibleCustomEventsOff\n      .split(' ')\n      .forEach(event => (customEventsOff[event] = true));\n\n    this.unbindBodyListener(body);\n\n    const listeners = (this.bodyModeListeners = {});\n    if (event == null) {\n      listeners.mouseover = bodyListener.bind(this, this.showTooltip, {});\n      listeners.mousemove = bodyListener.bind(this, this.updateTooltip, {\n        respectEffect: true\n      });\n      listeners.mouseout = bodyListener.bind(this, this.hideTooltip, {});\n    }\n\n    for (const event in customEvents) {\n      listeners[event] = bodyListener.bind(\n        this,\n        e => {\n          const targetEventOff =\n            e.currentTarget.getAttribute('data-event-off') || eventOff;\n          checkStatus.call(this, targetEventOff, e);\n        },\n        { customEvent: true }\n      );\n    }\n    for (const event in customEventsOff) {\n      listeners[event] = bodyListener.bind(this, this.hideTooltip, {\n        customEvent: true\n      });\n    }\n    for (const event in listeners) {\n      body.addEventListener(event, listeners[event]);\n    }\n  };\n\n  target.prototype.unbindBodyListener = function(body) {\n    body = body || getBody();\n\n    const listeners = this.bodyModeListeners;\n    for (const event in listeners) {\n      body.removeEventListener(event, listeners[event]);\n    }\n  };\n}\n","/**\n * Calculate the position of tooltip\n *\n * @params\n * - `e` {Event} the event of current mouse\n * - `target` {Element} the currentTarget of the event\n * - `node` {DOM} the react-tooltip object\n * - `place` {String} top / right / bottom / left\n * - `effect` {String} float / solid\n * - `offset` {Object} the offset to default position\n *\n * @return {Object}\n * - `isNewState` {Bool} required\n * - `newState` {Object}\n * - `position` {Object} {left: {Number}, top: {Number}}\n */\nexport default function(e, target, node, place, desiredPlace, effect, offset) {\n  const { width: tipWidth, height: tipHeight } = getDimensions(node);\n\n  const { width: targetWidth, height: targetHeight } = getDimensions(target);\n\n  const { mouseX, mouseY } = getCurrentOffset(e, target, effect);\n  const defaultOffset = getDefaultPosition(\n    effect,\n    targetWidth,\n    targetHeight,\n    tipWidth,\n    tipHeight\n  );\n  const { extraOffsetX, extraOffsetY } = calculateOffset(offset);\n\n  const windowWidth = window.innerWidth;\n  const windowHeight = window.innerHeight;\n\n  const { parentTop, parentLeft } = getParent(node);\n\n  // Get the edge offset of the tooltip\n  const getTipOffsetLeft = place => {\n    const offsetX = defaultOffset[place].l;\n    return mouseX + offsetX + extraOffsetX;\n  };\n  const getTipOffsetRight = place => {\n    const offsetX = defaultOffset[place].r;\n    return mouseX + offsetX + extraOffsetX;\n  };\n  const getTipOffsetTop = place => {\n    const offsetY = defaultOffset[place].t;\n    return mouseY + offsetY + extraOffsetY;\n  };\n  const getTipOffsetBottom = place => {\n    const offsetY = defaultOffset[place].b;\n    return mouseY + offsetY + extraOffsetY;\n  };\n\n  //\n  // Functions to test whether the tooltip's sides are inside\n  // the client window for a given orientation p\n  //\n  //  _____________\n  // |             | <-- Right side\n  // | p = 'left'  |\\\n  // |             |/  |\\\n  // |_____________|   |_\\  <-- Mouse\n  //      / \\           |\n  //       |\n  //       |\n  //  Bottom side\n  //\n  const outsideLeft = p => getTipOffsetLeft(p) < 0;\n  const outsideRight = p => getTipOffsetRight(p) > windowWidth;\n  const outsideTop = p => getTipOffsetTop(p) < 0;\n  const outsideBottom = p => getTipOffsetBottom(p) > windowHeight;\n\n  // Check whether the tooltip with orientation p is completely inside the client window\n  const outside = p =>\n    outsideLeft(p) || outsideRight(p) || outsideTop(p) || outsideBottom(p);\n  const inside = p => !outside(p);\n\n  const placesList = ['top', 'bottom', 'left', 'right'];\n  const insideList = [];\n  for (let i = 0; i < 4; i++) {\n    const p = placesList[i];\n    if (inside(p)) {\n      insideList.push(p);\n    }\n  }\n\n  let isNewState = false;\n  let newPlace;\n  const shouldUpdatePlace = desiredPlace !== place;\n  if (inside(desiredPlace) && shouldUpdatePlace) {\n    isNewState = true;\n    newPlace = desiredPlace;\n  } else if (insideList.length > 0 && outside(desiredPlace) && outside(place)) {\n    isNewState = true;\n    newPlace = insideList[0];\n  }\n\n  if (isNewState) {\n    return {\n      isNewState: true,\n      newState: { place: newPlace }\n    };\n  }\n\n  return {\n    isNewState: false,\n    position: {\n      left: parseInt(getTipOffsetLeft(place) - parentLeft, 10),\n      top: parseInt(getTipOffsetTop(place) - parentTop, 10)\n    }\n  };\n}\n\nconst getDimensions = node => {\n  const { height, width } = node.getBoundingClientRect();\n  return {\n    height: parseInt(height, 10),\n    width: parseInt(width, 10)\n  };\n};\n\n// Get current mouse offset\nconst getCurrentOffset = (e, currentTarget, effect) => {\n  const boundingClientRect = currentTarget.getBoundingClientRect();\n  const targetTop = boundingClientRect.top;\n  const targetLeft = boundingClientRect.left;\n  const { width: targetWidth, height: targetHeight } = getDimensions(\n    currentTarget\n  );\n\n  if (effect === 'float') {\n    return {\n      mouseX: e.clientX,\n      mouseY: e.clientY\n    };\n  }\n  return {\n    mouseX: targetLeft + targetWidth / 2,\n    mouseY: targetTop + targetHeight / 2\n  };\n};\n\n// List all possibility of tooltip final offset\n// This is useful in judging if it is necessary for tooltip to switch position when out of window\nconst getDefaultPosition = (\n  effect,\n  targetWidth,\n  targetHeight,\n  tipWidth,\n  tipHeight\n) => {\n  let top;\n  let right;\n  let bottom;\n  let left;\n  const disToMouse = 3;\n  const triangleHeight = 2;\n  const cursorHeight = 12; // Optimize for float bottom only, cause the cursor will hide the tooltip\n\n  if (effect === 'float') {\n    top = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: -(tipHeight + disToMouse + triangleHeight),\n      b: -disToMouse\n    };\n    bottom = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: disToMouse + cursorHeight,\n      b: tipHeight + disToMouse + triangleHeight + cursorHeight\n    };\n    left = {\n      l: -(tipWidth + disToMouse + triangleHeight),\n      r: -disToMouse,\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n    right = {\n      l: disToMouse,\n      r: tipWidth + disToMouse + triangleHeight,\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n  } else if (effect === 'solid') {\n    top = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: -(targetHeight / 2 + tipHeight + triangleHeight),\n      b: -(targetHeight / 2)\n    };\n    bottom = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: targetHeight / 2,\n      b: targetHeight / 2 + tipHeight + triangleHeight\n    };\n    left = {\n      l: -(tipWidth + targetWidth / 2 + triangleHeight),\n      r: -(targetWidth / 2),\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n    right = {\n      l: targetWidth / 2,\n      r: tipWidth + targetWidth / 2 + triangleHeight,\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n  }\n\n  return { top, bottom, left, right };\n};\n\n// Consider additional offset into position calculation\nconst calculateOffset = offset => {\n  let extraOffsetX = 0;\n  let extraOffsetY = 0;\n\n  if (Object.prototype.toString.apply(offset) === '[object String]') {\n    offset = JSON.parse(offset.toString().replace(/'/g, '\"'));\n  }\n  for (const key in offset) {\n    if (key === 'top') {\n      extraOffsetY -= parseInt(offset[key], 10);\n    } else if (key === 'bottom') {\n      extraOffsetY += parseInt(offset[key], 10);\n    } else if (key === 'left') {\n      extraOffsetX -= parseInt(offset[key], 10);\n    } else if (key === 'right') {\n      extraOffsetX += parseInt(offset[key], 10);\n    }\n  }\n\n  return { extraOffsetX, extraOffsetY };\n};\n\n// Get the offset of the parent elements\nconst getParent = currentTarget => {\n  let currentParent = currentTarget;\n  while (currentParent) {\n    const computedStyle = window.getComputedStyle(currentParent);\n    // transform and will-change: transform change the containing block\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_Block\n    if (\n      computedStyle.getPropertyValue('transform') !== 'none' ||\n      computedStyle.getPropertyValue('will-change') === 'transform'\n    )\n      break;\n    currentParent = currentParent.parentElement;\n  }\n\n  const parentTop =\n    (currentParent && currentParent.getBoundingClientRect().top) || 0;\n  const parentLeft =\n    (currentParent && currentParent.getBoundingClientRect().left) || 0;\n\n  return { parentTop, parentLeft };\n};\n","/**\n * To get the tooltip content\n * it may comes from data-tip or this.props.children\n * it should support multiline\n *\n * @params\n * - `tip` {String} value of data-tip\n * - `children` {ReactElement} this.props.children\n * - `multiline` {Any} could be Bool(true/false) or String('true'/'false')\n *\n * @return\n * - String or react component\n */\nimport React from 'react';\n\nexport default function(tip, children, getContent, multiline) {\n  if (children) return children;\n  if (getContent !== undefined && getContent !== null) return getContent; // getContent can be 0, '', etc.\n  if (getContent === null) return null; // Tip not exist and children is null or undefined\n\n  const regexp = /<br\\s*\\/?>/;\n  if (!multiline || multiline === 'false' || !regexp.test(tip)) {\n    // No trim(), so that user can keep their input\n    return tip;\n  }\n\n  // Multiline tooltip content\n  return tip.split(regexp).map((d, i) => {\n    return (\n      <span key={i} className=\"multi-line\">\n        {d}\n      </span>\n    );\n  });\n}\n","/**\n * Support aria- and role in ReactTooltip\n *\n * @params props {Object}\n * @return {Object}\n */\nexport function parseAria(props) {\n  const ariaObj = {};\n  Object.keys(props)\n    .filter(prop => {\n      // aria-xxx and role is acceptable\n      return /(^aria-\\w+$|^role$)/.test(prop);\n    })\n    .forEach(prop => {\n      ariaObj[prop] = props[prop];\n    });\n\n  return ariaObj;\n}\n","/**\n * Convert nodelist to array\n * @see https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/core/createArrayFromMixed.js#L24\n * NodeLists are functions in Safari\n */\n\nexport default function(nodeList) {\n  const length = nodeList.length;\n  if (nodeList.hasOwnProperty) {\n    return Array.prototype.slice.call(nodeList);\n  }\n  return new Array(length).fill().map(index => nodeList[index]);\n}\n","/**\n * Default pop-up style values (text color, background color).\n */\nconst defaultColors = {\n  dark: {\n    text: '#fff',\n    background: '#222',\n    border: 'transparent',\n    arrow: '#222'\n  },\n  success: {\n    text: '#fff',\n    background: '#8DC572',\n    border: 'transparent',\n    arrow: '#8DC572'\n  },\n  warning: {\n    text: '#fff',\n    background: '#F0AD4E',\n    border: 'transparent',\n    arrow: '#F0AD4E'\n  },\n  error: {\n    text: '#fff',\n    background: '#BE6464',\n    border: 'transparent',\n    arrow: '#BE6464'\n  },\n  info: {\n    text: '#fff',\n    background: '#337AB7',\n    border: 'transparent',\n    arrow: '#337AB7'\n  },\n  light: {\n    text: '#222',\n    background: '#fff',\n    border: 'transparent',\n    arrow: '#fff'\n  }\n};\n\nexport function getDefaultPopupColors(type) {\n  return defaultColors[type] ? { ...defaultColors[type] } : undefined;\n}\n","import { getDefaultPopupColors } from './defaultStyles';\n\n/**\n * Generates the specific tooltip style for use on render.\n */\nexport function generateTooltipStyle(uuid, customColors, type, hasBorder) {\n  return generateStyle(uuid, getPopupColors(customColors, type, hasBorder));\n}\n\n/**\n * Generates the tooltip style rules based on the element-specified \"data-type\" property.\n */\nfunction generateStyle(uuid, colors) {\n  const textColor = colors.text;\n  const backgroundColor = colors.background;\n  const borderColor = colors.border;\n  const arrowColor = colors.arrow;\n\n  return `\n  \t.${uuid} {\n\t    color: ${textColor};\n\t    background: ${backgroundColor};\n\t    border: 1px solid ${borderColor};\n  \t}\n\n  \t.${uuid}.place-top {\n        margin-top: -10px;\n    }\n    .${uuid}.place-top::before {\n        border-top: 8px solid ${borderColor};\n    }\n    .${uuid}.place-top::after {\n        border-left: 8px solid transparent;\n        border-right: 8px solid transparent;\n        bottom: -6px;\n        left: 50%;\n        margin-left: -8px;\n        border-top-color: ${arrowColor};\n        border-top-style: solid;\n        border-top-width: 6px;\n    }\n\n    .${uuid}.place-bottom {\n        margin-top: 10px;\n    }\n    .${uuid}.place-bottom::before {\n        border-bottom: 8px solid ${borderColor};\n    }\n    .${uuid}.place-bottom::after {\n        border-left: 8px solid transparent;\n        border-right: 8px solid transparent;\n        top: -6px;\n        left: 50%;\n        margin-left: -8px;\n        border-bottom-color: ${arrowColor};\n        border-bottom-style: solid;\n        border-bottom-width: 6px;\n    }\n\n    .${uuid}.place-left {\n        margin-left: -10px;\n    }\n    .${uuid}.place-left::before {\n        border-left: 8px solid ${borderColor};\n    }\n    .${uuid}.place-left::after {\n        border-top: 5px solid transparent;\n        border-bottom: 5px solid transparent;\n        right: -6px;\n        top: 50%;\n        margin-top: -4px;\n        border-left-color: ${arrowColor};\n        border-left-style: solid;\n        border-left-width: 6px;\n    }\n\n    .${uuid}.place-right {\n        margin-left: 10px;\n    }\n    .${uuid}.place-right::before {\n        border-right: 8px solid ${borderColor};\n    }\n    .${uuid}.place-right::after {\n        border-top: 5px solid transparent;\n        border-bottom: 5px solid transparent;\n        left: -6px;\n        top: 50%;\n        margin-top: -4px;\n        border-right-color: ${arrowColor};\n        border-right-style: solid;\n        border-right-width: 6px;\n    }\n  `;\n}\n\nfunction getPopupColors(customColors, type, hasBorder) {\n  const textColor = customColors.text;\n  const backgroundColor = customColors.background;\n  const borderColor = customColors.border;\n  const arrowColor = customColors.arrow\n    ? customColors.arrow\n    : customColors.background;\n\n  const colors = getDefaultPopupColors(type);\n\n  if (textColor) {\n    colors.text = textColor;\n  }\n\n  if (backgroundColor) {\n    colors.background = backgroundColor;\n  }\n\n  if (hasBorder) {\n    if (borderColor) {\n      colors.border = borderColor;\n    } else {\n      colors.border = type === 'light' ? 'black' : 'white';\n    }\n  }\n\n  if (arrowColor) {\n    colors.arrow = arrowColor;\n  }\n\n  return colors;\n}\n","/**\n * Tracking target removing from DOM.\n * It's necessary to hide tooltip when it's target disappears.\n * Otherwise, the tooltip would be shown forever until another target\n * is triggered.\n *\n * If MutationObserver is not available, this feature just doesn't work.\n */\n\n// https://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/\nconst getMutationObserverClass = () => {\n  return (\n    window.MutationObserver ||\n    window.WebKitMutationObserver ||\n    window.MozMutationObserver\n  );\n};\n\nexport default function(target) {\n  target.prototype.bindRemovalTracker = function() {\n    const MutationObserver = getMutationObserverClass();\n    if (MutationObserver == null) return;\n\n    const observer = new MutationObserver(mutations => {\n      for (let m1 = 0; m1 < mutations.length; m1++) {\n        const mutation = mutations[m1];\n        for (let m2 = 0; m2 < mutation.removedNodes.length; m2++) {\n          const element = mutation.removedNodes[m2];\n          if (element === this.state.currentTarget) {\n            this.hideTooltip();\n            return;\n          }\n        }\n      }\n    });\n\n    observer.observe(window.document, { childList: true, subtree: true });\n\n    this.removalTracker = observer;\n  };\n\n  target.prototype.unbindRemovalTracker = function() {\n    if (this.removalTracker) {\n      this.removalTracker.disconnect();\n      this.removalTracker = null;\n    }\n  };\n}\n","/* eslint-disable no-unused-vars, dot-notation */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/* Decorators */\nimport staticMethods from './decorators/staticMethods';\nimport windowListener from './decorators/windowListener';\nimport customEvent from './decorators/customEvent';\nimport isCapture from './decorators/isCapture';\nimport getEffect from './decorators/getEffect';\nimport bodyMode from './decorators/bodyMode';\nimport trackRemoval from './decorators/trackRemoval';\n\n/* Utils */\nimport getPosition from './utils/getPosition';\nimport getTipContent from './utils/getTipContent';\nimport { parseAria } from './utils/aria';\nimport nodeListToArray from './utils/nodeListToArray';\nimport { generateUUID } from './utils/uuid';\n\n/* CSS */\nimport baseCss from './index.scss';\nimport { generateTooltipStyle } from './decorators/styler';\n\n@staticMethods\n@windowListener\n@customEvent\n@isCapture\n@getEffect\n@bodyMode\n@trackRemoval\nclass ReactTooltip extends React.Component {\n  static get propTypes() {\n    return {\n      uuid: PropTypes.string,\n      children: PropTypes.any,\n      place: PropTypes.string,\n      type: PropTypes.string,\n      effect: PropTypes.string,\n      offset: PropTypes.object,\n      multiline: PropTypes.bool,\n      border: PropTypes.bool,\n      textColor: PropTypes.string,\n      backgroundColor: PropTypes.string,\n      borderColor: PropTypes.string,\n      arrowColor: PropTypes.string,\n      insecure: PropTypes.bool,\n      class: PropTypes.string,\n      className: PropTypes.string,\n      id: PropTypes.string,\n      html: PropTypes.bool,\n      delayHide: PropTypes.number,\n      delayUpdate: PropTypes.number,\n      delayShow: PropTypes.number,\n      event: PropTypes.string,\n      eventOff: PropTypes.string,\n      isCapture: PropTypes.bool,\n      globalEventOff: PropTypes.string,\n      getContent: PropTypes.any,\n      afterShow: PropTypes.func,\n      afterHide: PropTypes.func,\n      overridePosition: PropTypes.func,\n      disable: PropTypes.bool,\n      scrollHide: PropTypes.bool,\n      resizeHide: PropTypes.bool,\n      wrapper: PropTypes.string,\n      bodyMode: PropTypes.bool,\n      possibleCustomEvents: PropTypes.string,\n      possibleCustomEventsOff: PropTypes.string,\n      clickable: PropTypes.bool\n    };\n  }\n\n  static defaultProps = {\n    insecure: true,\n    resizeHide: true,\n    wrapper: 'div',\n    clickable: false\n  };\n\n  static supportedWrappers = ['div', 'span'];\n\n  static displayName = 'ReactTooltip';\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      uuid: props.uuid || generateUUID(),\n      place: props.place || 'top', // Direction of tooltip\n      desiredPlace: props.place || 'top',\n      type: 'dark', // Color theme of tooltip\n      effect: 'float', // float or fixed\n      show: false,\n      border: false,\n      customColors: {},\n      offset: {},\n      extraClass: '',\n      html: false,\n      delayHide: 0,\n      delayShow: 0,\n      event: props.event || null,\n      eventOff: props.eventOff || null,\n      currentEvent: null, // Current mouse event\n      currentTarget: null, // Current target of mouse event\n      ariaProps: parseAria(props), // aria- and role attributes\n      isEmptyTip: false,\n      disable: false,\n      possibleCustomEvents: props.possibleCustomEvents || '',\n      possibleCustomEventsOff: props.possibleCustomEventsOff || '',\n      originTooltip: null,\n      isMultiline: false\n    };\n\n    this.bind([\n      'showTooltip',\n      'updateTooltip',\n      'hideTooltip',\n      'hideTooltipOnScroll',\n      'getTooltipContent',\n      'globalRebuild',\n      'globalShow',\n      'globalHide',\n      'onWindowResize',\n      'mouseOnToolTip'\n    ]);\n\n    this.mount = true;\n    this.delayShowLoop = null;\n    this.delayHideLoop = null;\n    this.delayReshow = null;\n    this.intervalUpdateContent = null;\n  }\n\n  /**\n   * For unify the bind and unbind listener\n   */\n  bind(methodArray) {\n    methodArray.forEach(method => {\n      this[method] = this[method].bind(this);\n    });\n  }\n\n  componentDidMount() {\n    const { insecure, resizeHide } = this.props;\n\n    this.bindListener(); // Bind listener for tooltip\n    this.bindWindowEvents(resizeHide); // Bind global event for static method\n    this.injectStyles(); // Inject styles for each DOM root having tooltip.\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { ariaProps } = prevState;\n    const newAriaProps = parseAria(nextProps);\n    const isChanged = Object.keys(newAriaProps).some(props => {\n      return newAriaProps[props] !== ariaProps[props];\n    });\n    if (!isChanged) {\n      return null;\n    }\n    return {\n      ...prevState,\n      ariaProps: newAriaProps\n    };\n  }\n\n  componentWillUnmount() {\n    this.mount = false;\n\n    this.clearTimer();\n\n    this.unbindListener();\n    this.removeScrollListener(this.state.currentTarget);\n    this.unbindWindowEvents();\n  }\n\n  /* Look for the closest DOM root having tooltip and inject styles. */\n  injectStyles() {\n    const { tooltipRef } = this;\n    if (!tooltipRef) {\n      return;\n    }\n\n    let parentNode = tooltipRef.parentNode;\n    while (parentNode.parentNode) {\n      parentNode = parentNode.parentNode;\n    }\n\n    let domRoot;\n\n    switch (parentNode.constructor.name) {\n      case 'Document':\n      case 'HTMLDocument':\n        domRoot = parentNode.head;\n        break;\n      case 'ShadowRoot':\n      default:\n        domRoot = parentNode;\n        break;\n    }\n\n    // Prevent styles duplication.\n    if (!domRoot.querySelector('style[data-react-tooltip]')) {\n      const style = document.createElement('style');\n      style.textContent = baseCss;\n      style.setAttribute('data-react-tooltip', 'true');\n\n      domRoot.appendChild(style);\n    }\n  }\n\n  /**\n   * Return if the mouse is on the tooltip.\n   * @returns {boolean} true - mouse is on the tooltip\n   */\n  mouseOnToolTip() {\n    const { show } = this.state;\n\n    if (show && this.tooltipRef) {\n      /* old IE or Firefox work around */\n      if (!this.tooltipRef.matches) {\n        /* old IE work around */\n        if (this.tooltipRef.msMatchesSelector) {\n          this.tooltipRef.matches = this.tooltipRef.msMatchesSelector;\n        } else {\n          /* old Firefox work around */\n          this.tooltipRef.matches = this.tooltipRef.mozMatchesSelector;\n        }\n      }\n      return this.tooltipRef.matches(':hover');\n    }\n    return false;\n  }\n\n  /**\n   * Pick out corresponded target elements\n   */\n  getTargetArray(id) {\n    let targetArray = [];\n    let selector;\n    if (!id) {\n      selector = '[data-tip]:not([data-for])';\n    } else {\n      const escaped = id.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"');\n      selector = `[data-tip][data-for=\"${escaped}\"]`;\n    }\n\n    // Scan document for shadow DOM elements\n    nodeListToArray(document.getElementsByTagName('*'))\n      .filter(element => element.shadowRoot)\n      .forEach(element => {\n        targetArray = targetArray.concat(\n          nodeListToArray(element.shadowRoot.querySelectorAll(selector))\n        );\n      });\n    return targetArray.concat(\n      nodeListToArray(document.querySelectorAll(selector))\n    );\n  }\n\n  /**\n   * Bind listener to the target elements\n   * These listeners used to trigger showing or hiding the tooltip\n   */\n  bindListener() {\n    const { id, globalEventOff, isCapture } = this.props;\n    const targetArray = this.getTargetArray(id);\n\n    targetArray.forEach(target => {\n      if (target.getAttribute('currentItem') === null) {\n        target.setAttribute('currentItem', 'false');\n      }\n      this.unbindBasicListener(target);\n      if (this.isCustomEvent(target)) {\n        this.customUnbindListener(target);\n      }\n    });\n\n    if (this.isBodyMode()) {\n      this.bindBodyListener(targetArray);\n    } else {\n      targetArray.forEach(target => {\n        const isCaptureMode = this.isCapture(target);\n        const effect = this.getEffect(target);\n        if (this.isCustomEvent(target)) {\n          this.customBindListener(target);\n          return;\n        }\n\n        target.addEventListener('mouseenter', this.showTooltip, isCaptureMode);\n        if (effect === 'float') {\n          target.addEventListener(\n            'mousemove',\n            this.updateTooltip,\n            isCaptureMode\n          );\n        }\n        target.addEventListener('mouseleave', this.hideTooltip, isCaptureMode);\n      });\n    }\n\n    // Global event to hide tooltip\n    if (globalEventOff) {\n      window.removeEventListener(globalEventOff, this.hideTooltip);\n      window.addEventListener(globalEventOff, this.hideTooltip, isCapture);\n    }\n\n    // Track removal of targetArray elements from DOM\n    this.bindRemovalTracker();\n  }\n\n  /**\n   * Unbind listeners on target elements\n   */\n  unbindListener() {\n    const { id, globalEventOff } = this.props;\n    if (this.isBodyMode()) {\n      this.unbindBodyListener();\n    } else {\n      const targetArray = this.getTargetArray(id);\n      targetArray.forEach(target => {\n        this.unbindBasicListener(target);\n        if (this.isCustomEvent(target)) this.customUnbindListener(target);\n      });\n    }\n\n    if (globalEventOff)\n      window.removeEventListener(globalEventOff, this.hideTooltip);\n    this.unbindRemovalTracker();\n  }\n\n  /**\n   * Invoke this before bind listener and unmount the component\n   * it is necessary to invoke this even when binding custom event\n   * so that the tooltip can switch between custom and default listener\n   */\n  unbindBasicListener(target) {\n    const isCaptureMode = this.isCapture(target);\n    target.removeEventListener('mouseenter', this.showTooltip, isCaptureMode);\n    target.removeEventListener('mousemove', this.updateTooltip, isCaptureMode);\n    target.removeEventListener('mouseleave', this.hideTooltip, isCaptureMode);\n  }\n\n  getTooltipContent() {\n    const { getContent, children } = this.props;\n\n    // Generate tooltip content\n    let content;\n    if (getContent) {\n      if (Array.isArray(getContent)) {\n        content = getContent[0] && getContent[0](this.state.originTooltip);\n      } else {\n        content = getContent(this.state.originTooltip);\n      }\n    }\n\n    return getTipContent(\n      this.state.originTooltip,\n      children,\n      content,\n      this.state.isMultiline\n    );\n  }\n\n  isEmptyTip(placeholder) {\n    return (\n      (typeof placeholder === 'string' && placeholder === '') ||\n      placeholder === null\n    );\n  }\n\n  /**\n   * When mouse enter, show the tooltip\n   */\n  showTooltip(e, isGlobalCall) {\n    if (!this.tooltipRef) {\n      return;\n    }\n\n    if (isGlobalCall) {\n      // Don't trigger other elements belongs to other ReactTooltip\n      const targetArray = this.getTargetArray(this.props.id);\n      const isMyElement = targetArray.some(ele => ele === e.currentTarget);\n      if (!isMyElement) return;\n    }\n    // Get the tooltip content\n    // calculate in this phrase so that tip width height can be detected\n    const { multiline, getContent } = this.props;\n    const originTooltip = e.currentTarget.getAttribute('data-tip');\n    const isMultiline =\n      e.currentTarget.getAttribute('data-multiline') || multiline || false;\n\n    // If it is focus event or called by ReactTooltip.show, switch to `solid` effect\n    const switchToSolid = e instanceof window.FocusEvent || isGlobalCall;\n\n    // if it needs to skip adding hide listener to scroll\n    let scrollHide = true;\n    if (e.currentTarget.getAttribute('data-scroll-hide')) {\n      scrollHide = e.currentTarget.getAttribute('data-scroll-hide') === 'true';\n    } else if (this.props.scrollHide != null) {\n      scrollHide = this.props.scrollHide;\n    }\n\n    // Make sure the correct place is set\n    const desiredPlace =\n      e.currentTarget.getAttribute('data-place') || this.props.place || 'top';\n    const effect =\n      (switchToSolid && 'solid') || this.getEffect(e.currentTarget);\n    const offset =\n      e.currentTarget.getAttribute('data-offset') || this.props.offset || {};\n    const result = getPosition(\n      e,\n      e.currentTarget,\n      this.tooltipRef,\n      desiredPlace,\n      desiredPlace,\n      effect,\n      offset\n    );\n    if (result.position && this.props.overridePosition) {\n      result.position = this.props.overridePosition(\n        result.position,\n        e,\n        e.currentTarget,\n        this.tooltipRef,\n        desiredPlace,\n        desiredPlace,\n        effect,\n        offset\n      );\n    }\n\n    const place = result.isNewState ? result.newState.place : desiredPlace;\n\n    // To prevent previously created timers from triggering\n    this.clearTimer();\n\n    const target = e.currentTarget;\n\n    const reshowDelay = this.state.show\n      ? target.getAttribute('data-delay-update') || this.props.delayUpdate\n      : 0;\n\n    const self = this;\n\n    const updateState = function updateState() {\n      self.setState(\n        {\n          originTooltip: originTooltip,\n          isMultiline: isMultiline,\n          desiredPlace: desiredPlace,\n          place: place,\n          type: target.getAttribute('data-type') || self.props.type || 'dark',\n          customColors: {\n            text:\n              target.getAttribute('data-text-color') ||\n              self.props.textColor ||\n              null,\n            background:\n              target.getAttribute('data-background-color') ||\n              self.props.backgroundColor ||\n              null,\n            border:\n              target.getAttribute('data-border-color') ||\n              self.props.borderColor ||\n              null,\n            arrow:\n              target.getAttribute('data-arrow-color') ||\n              self.props.arrowColor ||\n              null\n          },\n          effect: effect,\n          offset: offset,\n          html:\n            (target.getAttribute('data-html')\n              ? target.getAttribute('data-html') === 'true'\n              : self.props.html) || false,\n          delayShow:\n            target.getAttribute('data-delay-show') || self.props.delayShow || 0,\n          delayHide:\n            target.getAttribute('data-delay-hide') || self.props.delayHide || 0,\n          delayUpdate:\n            target.getAttribute('data-delay-update') ||\n            self.props.delayUpdate ||\n            0,\n          border:\n            (target.getAttribute('data-border')\n              ? target.getAttribute('data-border') === 'true'\n              : self.props.border) || false,\n          extraClass:\n            target.getAttribute('data-class') ||\n            self.props.class ||\n            self.props.className ||\n            '',\n          disable:\n            (target.getAttribute('data-tip-disable')\n              ? target.getAttribute('data-tip-disable') === 'true'\n              : self.props.disable) || false,\n          currentTarget: target\n        },\n        () => {\n          if (scrollHide) {\n            self.addScrollListener(self.state.currentTarget);\n          }\n\n          self.updateTooltip(e);\n\n          if (getContent && Array.isArray(getContent)) {\n            self.intervalUpdateContent = setInterval(() => {\n              if (self.mount) {\n                const { getContent } = self.props;\n                const placeholder = getTipContent(\n                  originTooltip,\n                  '',\n                  getContent[0](),\n                  isMultiline\n                );\n                const isEmptyTip = self.isEmptyTip(placeholder);\n                self.setState({ isEmptyTip });\n                self.updatePosition();\n              }\n            }, getContent[1]);\n          }\n        }\n      );\n    };\n\n    // If there is no delay call immediately, don't allow events to get in first.\n    if (reshowDelay) {\n      this.delayReshow = setTimeout(updateState, reshowDelay);\n    } else {\n      updateState();\n    }\n  }\n\n  /**\n   * When mouse hover, update tool tip\n   */\n  updateTooltip(e) {\n    const { delayShow, disable } = this.state;\n    const { afterShow } = this.props;\n    const placeholder = this.getTooltipContent();\n    const eventTarget = e.currentTarget || e.target;\n\n    // Check if the mouse is actually over the tooltip, if so don't hide the tooltip\n    if (this.mouseOnToolTip()) {\n      return;\n    }\n\n    // if the tooltip is empty, disable the tooltip\n    if (this.isEmptyTip(placeholder) || disable) {\n      return;\n    }\n\n    const delayTime = !this.state.show ? parseInt(delayShow, 10) : 0;\n\n    const updateState = () => {\n      if (\n        (Array.isArray(placeholder) && placeholder.length > 0) ||\n        placeholder\n      ) {\n        const isInvisible = !this.state.show;\n        this.setState(\n          {\n            currentEvent: e,\n            currentTarget: eventTarget,\n            show: true\n          },\n          () => {\n            this.updatePosition();\n            if (isInvisible && afterShow) {\n              afterShow(e);\n            }\n          }\n        );\n      }\n    };\n\n    clearTimeout(this.delayShowLoop);\n    if (delayTime) {\n      this.delayShowLoop = setTimeout(updateState, delayTime);\n    } else {\n      updateState();\n    }\n  }\n\n  /*\n   * If we're mousing over the tooltip remove it when we leave.\n   */\n  listenForTooltipExit() {\n    const { show } = this.state;\n\n    if (show && this.tooltipRef) {\n      this.tooltipRef.addEventListener('mouseleave', this.hideTooltip);\n    }\n  }\n\n  removeListenerForTooltipExit() {\n    const { show } = this.state;\n\n    if (show && this.tooltipRef) {\n      this.tooltipRef.removeEventListener('mouseleave', this.hideTooltip);\n    }\n  }\n\n  /**\n   * When mouse leave, hide tooltip\n   */\n  hideTooltip(e, hasTarget, options = { isScroll: false }) {\n    const { disable } = this.state;\n    const { isScroll } = options;\n    const delayHide = isScroll ? 0 : this.state.delayHide;\n    const { afterHide } = this.props;\n    const placeholder = this.getTooltipContent();\n    if (!this.mount) return;\n    if (this.isEmptyTip(placeholder) || disable) return; // if the tooltip is empty, disable the tooltip\n    if (hasTarget) {\n      // Don't trigger other elements belongs to other ReactTooltip\n      const targetArray = this.getTargetArray(this.props.id);\n      const isMyElement = targetArray.some(ele => ele === e.currentTarget);\n      if (!isMyElement || !this.state.show) return;\n    }\n\n    const resetState = () => {\n      const isVisible = this.state.show;\n      // Check if the mouse is actually over the tooltip, if so don't hide the tooltip\n      if (this.mouseOnToolTip()) {\n        this.listenForTooltipExit();\n        return;\n      }\n\n      this.removeListenerForTooltipExit();\n\n      this.setState({ show: false }, () => {\n        this.removeScrollListener(this.state.currentTarget);\n        if (isVisible && afterHide) {\n          afterHide(e);\n        }\n      });\n    };\n\n    this.clearTimer();\n    if (delayHide) {\n      this.delayHideLoop = setTimeout(resetState, parseInt(delayHide, 10));\n    } else {\n      resetState();\n    }\n  }\n\n  /**\n   * When scroll, hide tooltip\n   */\n  hideTooltipOnScroll(event, hasTarget) {\n    this.hideTooltip(event, hasTarget, { isScroll: true });\n  }\n\n  /**\n   * Add scroll event listener when tooltip show\n   * automatically hide the tooltip when scrolling\n   */\n  addScrollListener(currentTarget) {\n    const isCaptureMode = this.isCapture(currentTarget);\n    window.addEventListener('scroll', this.hideTooltipOnScroll, isCaptureMode);\n  }\n\n  removeScrollListener(currentTarget) {\n    const isCaptureMode = this.isCapture(currentTarget);\n    window.removeEventListener(\n      'scroll',\n      this.hideTooltipOnScroll,\n      isCaptureMode\n    );\n  }\n\n  // Calculation the position\n  updatePosition() {\n    const {\n      currentEvent,\n      currentTarget,\n      place,\n      desiredPlace,\n      effect,\n      offset\n    } = this.state;\n    const node = this.tooltipRef;\n    const result = getPosition(\n      currentEvent,\n      currentTarget,\n      node,\n      place,\n      desiredPlace,\n      effect,\n      offset\n    );\n    if (result.position && this.props.overridePosition) {\n      result.position = this.props.overridePosition(\n        result.position,\n        currentEvent,\n        currentTarget,\n        node,\n        place,\n        desiredPlace,\n        effect,\n        offset\n      );\n    }\n\n    if (result.isNewState) {\n      // Switch to reverse placement\n      return this.setState(result.newState, () => {\n        this.updatePosition();\n      });\n    }\n\n    // Set tooltip position\n    node.style.left = result.position.left + 'px';\n    node.style.top = result.position.top + 'px';\n  }\n\n  /**\n   * CLear all kinds of timeout of interval\n   */\n  clearTimer() {\n    clearTimeout(this.delayShowLoop);\n    clearTimeout(this.delayHideLoop);\n    clearTimeout(this.delayReshow);\n    clearInterval(this.intervalUpdateContent);\n  }\n\n  hasCustomColors() {\n    return Boolean(\n      Object.keys(this.state.customColors).find(\n        color => color !== 'border' && this.state.customColors[color]\n      ) ||\n        (this.state.border && this.state.customColors['border'])\n    );\n  }\n\n  render() {\n    const { extraClass, html, ariaProps, disable } = this.state;\n    const content = this.getTooltipContent();\n    const isEmptyTip = this.isEmptyTip(content);\n    const style = generateTooltipStyle(\n      this.state.uuid,\n      this.state.customColors,\n      this.state.type,\n      this.state.border\n    );\n\n    const tooltipClass =\n      '__react_component_tooltip' +\n      ` ${this.state.uuid}` +\n      (this.state.show && !disable && !isEmptyTip ? ' show' : '') +\n      (this.state.border ? ' border' : '') +\n      ` place-${this.state.place}` + // top, bottom, left, right\n      ` type-${this.hasCustomColors() ? 'custom' : this.state.type}` + // dark, success, warning, error, info, light, custom\n      (this.props.delayUpdate ? ' allow_hover' : '') +\n      (this.props.clickable ? ' allow_click' : '');\n\n    let Wrapper = this.props.wrapper;\n\n    if (ReactTooltip.supportedWrappers.indexOf(Wrapper) < 0) {\n      Wrapper = ReactTooltip.defaultProps.wrapper;\n    }\n\n    const wrapperClassName = [tooltipClass, extraClass]\n      .filter(Boolean)\n      .join(' ');\n\n    if (html) {\n      const htmlContent = `${content}\\n<style>${style}</style>`;\n\n      return (\n        <Wrapper\n          className={`${wrapperClassName}`}\n          id={this.props.id}\n          ref={ref => (this.tooltipRef = ref)}\n          {...ariaProps}\n          data-id=\"tooltip\"\n          dangerouslySetInnerHTML={{ __html: htmlContent }}\n        />\n      );\n    } else {\n      return (\n        <Wrapper\n          className={`${wrapperClassName}`}\n          id={this.props.id}\n          {...ariaProps}\n          ref={ref => (this.tooltipRef = ref)}\n          data-id=\"tooltip\"\n        >\n          <style dangerouslySetInnerHTML={{ __html: style }} />\n          {content}\n        </Wrapper>\n      );\n    }\n  }\n}\n\nexport default ReactTooltip;\n","/**\n * Events that should be bound to the window\n */\nimport CONSTANT from '../constant';\n\nexport default function(target) {\n  target.prototype.bindWindowEvents = function(resizeHide) {\n    // ReactTooltip.hide\n    window.removeEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide);\n    window.addEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide, false);\n\n    // ReactTooltip.rebuild\n    window.removeEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild);\n    window.addEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild, false);\n\n    // ReactTooltip.show\n    window.removeEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow);\n    window.addEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow, false);\n\n    // Resize\n    if (resizeHide) {\n      window.removeEventListener('resize', this.onWindowResize);\n      window.addEventListener('resize', this.onWindowResize, false);\n    }\n  };\n\n  target.prototype.unbindWindowEvents = function() {\n    window.removeEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide);\n    window.removeEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild);\n    window.removeEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow);\n    window.removeEventListener('resize', this.onWindowResize);\n  };\n\n  /**\n   * invoked by resize event of window\n   */\n  target.prototype.onWindowResize = function() {\n    if (!this.mount) return;\n    this.hideTooltip();\n  };\n}\n","/**\n * Util method to judge if it should follow capture model\n */\n\nexport default function(target) {\n  target.prototype.isCapture = function(currentTarget) {\n    return (\n      (currentTarget &&\n        currentTarget.getAttribute('data-iscapture') === 'true') ||\n      this.props.isCapture ||\n      false\n    );\n  };\n}\n","/**\n * Util method to get effect\n */\n\nexport default function(target) {\n  target.prototype.getEffect = function(currentTarget) {\n    const dataEffect = currentTarget.getAttribute('data-effect');\n    return dataEffect || this.props.effect || 'float';\n  };\n}\n","import { v4 as uuid } from 'uuid';\n\nexport function generateUUID() {\n  return 't' + uuid();\n}\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"sourceRoot":""}