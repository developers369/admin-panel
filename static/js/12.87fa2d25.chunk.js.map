{"version":3,"sources":["Components/LogIn/LogIn.jsx","ReusableComponent/InputTag/InputTag.jsx","Redux/adminAction.js","ReusableComponent/Button/Button.jsx"],"names":["username","password","LogIn","props","handleChange","e","text","setState","inputUserName","target","value","state","errorMessage","inputPassword","errorMessage1","handleClick","login","isLoginClick","preventDefault","responseGoogle","response","console","log","error","cookies","set","name","path","history","push","this","get","success","className","InputTag","inputClass","type","inputText","placeHolder","onChange","Button","btnClass","btnName","onClick","clientId","buttonText","onSuccess","onFailure","cookiePolicy","Component","connect","admin","dispatch","withCookies","id","placeholder","onKeyUp","disabled","userName","LOGIN","payload","updateProfile","fullName","email","profileImg","UPDATE_PROFILE","addUser","salary","contact","avatar","ADD_USER","updateUser","updateId","UPDATE_USER","deleteUser","deleteId","DELETE_USER","deleteUsers","deletedIdArray","DELETE_USERS","changeStatus","CHANGE_STATUS","modelBtnId","btnclass","btnType","data-toggle","dataToggle","data-target","dataTarget"],"mappings":"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","file":"static/js/12.87fa2d25.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport \"./LogIn.scss\"\nimport InputTag from '../../ReusableComponent/InputTag'\nimport Button from '../../ReusableComponent/Button'\nimport { connect } from 'react-redux'\nimport {login} from '../../Redux/adminAction'\nimport GoogleLogin from 'react-google-login'\nimport { withCookies, Cookies} from 'react-cookie'\nimport { instanceOf } from 'prop-types';\n\nlet username\nlet password\n\n\nclass LogIn extends Component {\n\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };\n \n      \n    constructor(props) {\n        super(props);\n        console.log(\"const.....\",props);\n        this.state = { \n            inputUserName : \"\",\n            inputPassword : \"\",\n            errorMessage: \"\",\n            errorMessage1: \"\",\n            error: \"\",\n            isLoginClick: false\n         }\n  \n    }\n\n    componentWillMount(){\n        const {cookies} = this.props\n        \n        if(cookies.get(\"Name\") === \"\"){\n            this.props.history.push(\"/dashboard/dashboard-content\")\n        }\n    }\n\n    handleChange = (e,text) =>{\n\n        if(text === \"uname\"){\n            this.setState({inputUserName: e.target.value})\n            username = e.target.value\n            if(this.state.inputUserName !== \"\"){\n                this.setState({errorMessage: \"\"})\n            }\n        }        \n        else{\n            this.setState({inputPassword: e.target.value})\n            password = e.target.value\n\n            if(this.state.inputPassword !== \"\"){\n                this.setState({errorMessage1: \"\"})\n            }\n        }\n\n    }\n\n    componentDidUpdate(){\n        //console.log('componentWillReceiveProps', nextProps);\n        console.log(\"update\", this.state.isLoginClick);\n        if(this.state.isLoginClick){\n            if(this.props.success === false){\n                console.log(\"sssss\");\n                this.setState({error: \"Incorrect Username and Password\", isLoginClick: false})\n                \n            }else{\n                //console.log(nextProps);\n                this.setState({error: \"\", isLoginClick: false})\n                //setcookie\n                \n                const {cookies} = this.props\n                cookies.set(\"Name\", this.props.name, {path: \"/\"})\n\n                console.log(this.props);\n\n                \n\n                // redirect to the dashboard\n                this.props.history.push(\"/dashboard/dashboard-content\")\n\n\n            }\n        }\n        \n    }\n\n    handleClick = (e) => {\n        \n        if(this.state.inputUserName === \"\" || this.state.inputPassword === \"\"){\n            if(this.state.inputUserName === \"\"){\n                this.setState({errorMessage: \"User name can't be empty\"})\n            }\n    \n            else if(this.state.inputPassword === \"\"){\n                this.setState({errorMessage1: \"Password can't be empty\"})\n            }\n        }else{\n            this.props.login() \n        }\n        \n        this.setState({isLoginClick:true})\n          \n        e.preventDefault()\n       \n    }\n\n    responseGoogle = (response) => {\n        console.log(response);\n        // username = response.profileObj.givenName\n        \n        this.setState({error: \"\"})\n        //setcookie\n        \n        const {cookies} = this.props\n        cookies.set(\"Name\", this.props.name, {path: \"/\"})\n\n        // redirect to the dashboard\n        this.props.history.push(\"/dashboard/dashboard-content\")\n    }\n\n    render() {\n       console.log(\"....render\"); \n        return ( \n            <div className=\"login-container\">\n                \n                <div className=\"login-block\">\n\n                    <h1>SIGN IN</h1>\n                    <div className=\"login-form-block\">\n\n                        <form className=\"login-form\">\n\n                            <div className=\"errorMsg\">{this.state.error}</div>\n\n                            <div className=\"form-item\">\n                            \n                                <label>Username</label>\n                                <br></br>\n                                {/* <i className=\"fa fa-user\" aria-hidden=\"true\"></i> */}\n                                <InputTag \n                                    inputClass=\"inputTag\"\n                                    type=\"text\" \n                                    inputText={this.state.inputUserName}\n                                    placeHolder=\"Username\"\n                                    onChange={ (e) => this.handleChange(e, \"uname\")}\n                                />\n                                <div className=\"errorMsg\">{this.state.errorMessage}</div>\n                            </div>\n\n                            <div className=\"form-item\">\n                                <label>Password</label>\n                                <br></br>\n                                {/* <i className=\"fa fa-key\" aria-hidden=\"true\"></i> */}\n                                <InputTag \n                                    inputClass=\"inputTag\"\n                                    type=\"password\" \n                                    inputText={this.state.inputPassword}\n                                    placeHolder=\"Password\"\n                                    onChange={ (e) => this.handleChange(e, \"pwd\")}\n                                />\n                                <div className=\"errorMsg\">{this.state.errorMessage1}</div> \n                            </div>\n\n                            <div className=\"form-button\">\n                                <Button \n                                    btnClass=\"button\"\n                                    btnName=\"SIGN IN\" \n                                    onClick={(e) => this.handleClick(e)}\n                                />\n                            </div>\n\n                            <div className=\"form-button\">\n\n                                <GoogleLogin\n                                    clientId=\"368640192648-k1dtcnv4he11tugkt0vhqv3lhfu2jo93.apps.googleusercontent.com\"\n                                    buttonText=\"Login\"\n                                    onSuccess={this.responseGoogle}\n                                    onFailure={this.responseGoogle}\n                                    cookiePolicy={'single_host_origin'}\n                                />\n                            </div>\n                            \n                        </form>\n                    </div>\n                    \n                </div>\n\n                \n            </div>\n            \n         );\n    }\n}\n\nconst mapStateToProps = state => {\n    console.log(state);\n    return{\n        success: state.success,\n        name: state.admin.name\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        login: () => dispatch(login(username, password)),\n    }\n}\n \nexport default connect(mapStateToProps, mapDispatchToProps)(withCookies(LogIn));","import React, { Component } from 'react';\nimport './InputTag.scss'\n\nclass InputTag extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            inputText : \"\"\n        };\n    }\n\n    \n    render() {\n        return (\n            <input\n                id={this.props.id} \n                className={this.props.inputClass} \n                type={this.props.type} \n                value={this.props.inputText} \n                placeholder={this.props.placeHolder} \n                onChange={this.props.onChange} \n                onKeyUp={this.props.onKeyUp}\n                disabled={this.props.disabled} \n                onClick={this.props.onClick}\n                name={this.props.name}\n            />\n           \n        );\n    }\n}\n\nexport default InputTag;","import {LOGIN, UPDATE_PROFILE, ADD_USER, UPDATE_USER, DELETE_USER, DELETE_USERS, CHANGE_STATUS, FETCH_USERS} from './actionType'\n\nexport function login(userName, password){\n    // console.log(userName);\n    return{\n        type: LOGIN,\n        payload: {\n            userName,\n            password\n        }\n    }\n}\n\nexport function updateProfile(fullName, email, profileImg){\n    // console.log(userName);\n    return{\n        type: UPDATE_PROFILE,\n        payload: {\n            fullName,\n            email,\n            profileImg\n        }\n    }\n}\n\n\nexport function addUser(fullName, salary, email, contact, avatar){\n    console.log(avatar);\n    return{\n        type: ADD_USER,\n        payload: {\n            fullName,\n            salary,\n            email,\n            contact,\n            avatar\n        }\n    }\n}\n\n\nexport function updateUser(updateId, fullName, salary, email, contact, avatar){\n    \n    return{\n        type: UPDATE_USER,\n        payload: {\n            updateId,\n            fullName,\n            salary,\n            email,\n            contact,\n            avatar\n        }\n    }\n}\n\nexport function deleteUser(deleteId){\n    // console.log(deleteId);\n    return{\n        type: DELETE_USER,\n        payload: deleteId\n    }\n}\n\nexport function deleteUsers(deletedIdArray){\n    // console.log(deleteId);\n    return{\n        type: DELETE_USERS,\n        payload: deletedIdArray\n    }\n}\n\nexport function changeStatus(id){\n    // console.log(deleteId);\n    return{\n        type: CHANGE_STATUS,\n        payload: id\n    }\n}\n\nexport function fetchUsers(fullName, salary, email, contact, avatar){\n    console.log(avatar);\n    return{\n        type: FETCH_USERS,\n    }\n}\n","import React, { Component } from 'react';\nimport './Button.scss'\nclass Button extends Component {\n    state = {  }\n    render() { \n       \n        return ( \n            <button id={this.props.modelBtnId} className={this.props.btnclass} type={this.props.btnType} onClick={this.props.onClick} data-toggle={this.props.dataToggle} data-target={this.props.dataTarget}>{this.props.btnName}</button>\n         );\n    }\n}\n \nexport default Button;"],"sourceRoot":""}