{"version":3,"sources":["SalaryChart.jsx","ReusableComponent/ImageCarousel/Item.jsx","ReusableComponent/ImageCarousel/ImageCarousel.jsx","LineChartP.jsx","PieRechart.jsx","GoogleMap.jsx","Components/DashboardContent/DashboardContent.jsx","ReusableComponent/InputTag/InputTag.jsx","Redux/adminAction.js"],"names":["userNames","salaryArray","SalaryChart","props","state","data","this","users","length","map","user","fullName","salary","i","push","userName","setState","BarChart","width","height","CartesianGrid","XAxis","dataKey","YAxis","Tooltip","Bar","fill","Component","connect","styled","div","breakPoints","itemsToShow","itemsToScroll","chartData","LineChartP","matchArray","Array","allUser","activeUser","inactiveUser","chartDate","createdDate","j","status","Date","Total","Active","InActive","LineChart","strokeDasharray","Legend","Line","type","stroke","PieRechart","COLORS","forEach","PieChart","Pie","color","nameKey","cx","cy","outerRadius","entry","index","Cell","GoogleMap","bootstrapURLKeys","key","defaultCenter","lat","lng","defaultZoom","DashboardContent","showFilter","document","getElementById","style","display","closeFilter","handleFilter","text","today","date","getFullYear","getMonth","getDate","todayDate","split","day","userDate","userDay","parseInt","toString","console","log","removeFilter","checked","className","aria-hidden","data-tip","data-for","onClick","id","place","effect","InputTag","inputClass","name","dispatch","inputText","value","placeholder","placeHolder","onChange","onKeyUp","disabled","login","password","LOGIN","payload","updateProfile","email","profileImg","UPDATE_PROFILE","addUser","contact","avatar","ADD_USER","updateUser","updateId","UPDATE_USER","deleteUser","deleteId","DELETE_USER","deleteUsers","deletedIdArray","DELETE_USERS","changeStatus","CHANGE_STATUS"],"mappings":"iLAIIA,EAAWC,E,0HAETC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAK,IAHM,E,qDAOnB,WAEI,GAAGC,KAAKH,MAAMI,MAAMC,OAAS,EAAE,CAC3B,IAAIH,EAAO,GACXL,EAAYM,KAAKH,MAAMI,MAAME,KAAI,SAAAC,GAAI,OAAIA,EAAKC,YAC9CV,EAAcK,KAAKH,MAAMI,MAAME,KAAI,SAAAC,GAAI,OAAIA,EAAKE,UAEhD,IAAI,IAAIC,EAAE,EAAGA,EAAEb,EAAUQ,OAAQK,IAC7BR,EAAKS,KAAK,CACNC,SAAWf,EAAUa,GACrBD,OAAQX,EAAYY,KAI5BP,KAAKU,SAAS,CAACX,KAAMA,O,oBAI7B,WAEI,OAEI,eAACY,EAAA,EAAD,CAAUC,MAAO,IAAKC,OAAQ,IAAKd,KAAMC,KAAKF,MAAMC,KAApD,UACI,cAACe,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAOC,QAAS,aAChB,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAKH,QAAS,SAAUI,KAAK,mB,GAnCnBC,aAiDXC,eANS,SAAAxB,GACpB,MAAM,CACFG,MAAOH,EAAMG,SAINqB,CAAyB1B,G,mBCrDzB2B,E,OAAAA,EAAOC,IAAtB,wLCEMC,EAAc,CAChB,CAAEb,MAAO,EAAGc,YAAa,GACzB,CAAEd,MAAO,IAAKc,YAAa,EAAGC,cAAe,GAC7C,CAAEf,MAAO,IAAKc,YAAa,GAC3B,CAAEd,MAAO,KAAMc,YAAa,I,GAGJL,Y,qDCPxBO,EAAY,GA8EDC,E,kDA3EX,WAAYhC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,IAHK,E,qDAOnB,WAOG,IALC,IAAIG,EAASF,KAAKH,MAAMI,MAAMC,OAEtBD,EAAUD,KAAKH,MAAfI,MACJ6B,EAAa,IAAIC,MAAM7B,GAAQkB,KAAK,GAEjCb,EAAE,EAAGA,EAAEL,EAAQK,IAAI,CAEtB,IAAIyB,EAAU,EAAGC,EAAa,EAAGC,EAAe,EAE5CC,EAAYlC,EAAMM,GAAG6B,YACzB,GAAqB,IAAlBN,EAAWvB,GAAS,CAEnB,IAAI,IAAI8B,EAAE,EAAGA,EAAErC,KAAKH,MAAMI,MAAMC,OAAQmC,IAEjCF,IAAcnC,KAAKH,MAAMI,MAAMoC,GAAGD,cAEjCN,EAAWO,GAAK,EAEhBL,IACGhC,KAAKH,MAAMI,MAAMoC,GAAGC,OACnBL,IAEAC,KAQZN,EAAUpB,KAAK,CACX+B,KAAMJ,EACNK,MAAOR,EACPS,OAAQR,EACRS,SAAUR,KAMtBlC,KAAKU,SAAS,CACVX,KAAM6B,IAGVA,EAAY,K,oBAIhB,WACI,OAEI,eAACe,EAAA,EAAD,CAAW/B,MAAO,IAAKC,OAAQ,IAAKd,KAAMC,KAAKF,MAAMC,KAArD,UACI,cAACe,EAAA,EAAD,CAAe8B,gBAAgB,QAC/B,cAAC7B,EAAA,EAAD,CAAOC,QAAQ,SACf,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAAC2B,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAMC,KAAK,WAAW/B,QAAQ,QAAQgC,OAAO,SAC7C,cAACF,EAAA,EAAD,CAAMC,KAAK,WAAW/B,QAAQ,SAASgC,OAAO,UAC9C,cAACF,EAAA,EAAD,CAAMC,KAAK,WAAW/B,QAAQ,WAAWgC,OAAO,e,GArEvC3B,a,4BCHrBO,EAAY,GAwDDqB,E,kDAtDX,WAAYpD,GAAQ,IAAD,8BACf,cAAMA,IAKVqD,OAAS,CAAC,SAAU,SAJhB,EAAKpD,MAAQ,CACTC,KAAM,IAHK,E,sDASnB,WAII,IAAIkC,EAAa,EAAGC,EAAe,EAEnClC,KAAKH,MAAMI,MAAMkD,SAAQ,SAAA/C,GAClBA,EAAKkC,OACJL,IAEAC,OAGRN,EAAUpB,KAAK,CACX,KAAQ,SACR,MAASyB,IAGbL,EAAUpB,KAAK,CACX,KAAQ,WACR,MAAS0B,IAIblC,KAAKU,SAAS,CAACX,KAAM6B,IAErBA,EAAU,K,oBAGd,WAAU,IAAD,OACL,OAEI,eAACwB,EAAA,EAAD,CAAUxC,MAAO,IAAKC,OAAQ,IAA9B,UACI,cAACwC,EAAA,EAAD,CAAKtD,KAAMC,KAAKF,MAAMC,KAAMuD,MAAM,UAAUtC,QAAQ,QAAQuC,QAAQ,OAAOC,GAAG,MAAMC,GAAG,MAAMC,YAAa,IAAKtC,KAAK,UAApH,SAEQpB,KAAKF,MAAMC,KAAKI,KAAI,SAACwD,EAAOC,GAAR,OAAkB,cAACC,EAAA,EAAD,CAA4BzC,KAAM,EAAK8B,OAAOU,EAAQ,EAAKV,OAAOhD,SAAlE,eAAmB0D,SAGjE,cAAC1C,EAAA,EAAD,IACA,cAAC2B,EAAA,EAAD,W,GAjDSxB,a,UCyCVyC,E,kDAvCX,WAAYjE,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,GAFE,E,0CAInB,WACI,OACI,cAAC,IAAD,CACIiE,iBAAkB,CAAEC,IAAM,2CAC1BC,cAAe,CACXC,IAAM,UACNC,IAAK,WAETC,YAAa,S,GAbL/C,a,iBCUlBgD,E,kDACF,WAAYxE,GAAQ,IAAD,8BACf,cAAMA,IA+BVyE,WAAa,WACTC,SAASC,eAAe,gBAAgBC,MAAMC,QAAQ,SAjCvC,EAoCnBC,YAAc,WACVJ,SAASC,eAAe,gBAAgBC,MAAMC,QAAQ,QArCvC,EAwCnBE,aAAe,SAACC,GACZN,SAASC,eAAe,gBAAgBC,MAAMC,QAAQ,OACtDH,SAASC,eAAe,cAAcC,MAAMC,QAAQ,QAGpD,IAAII,EAAQ,IAAIvC,KAChBwC,EAAOD,EAAME,cAAgB,KAAOF,EAAMG,WAAa,GAAK,IAAMH,EAAMI,UAEpElD,EAAQ,EAAGC,EAAW,EAAGC,EAAa,EAE9B,UAAT2C,EAGC,EAAKhF,MAAMI,MAAMkD,SAAQ,SAAA/C,GAElBA,EAAKgC,cAAgB2C,IAEpB/C,IACG5B,EAAKkC,OACJL,IAEAC,QAMC,cAAT2C,EAGJ,EAAKhF,MAAMI,MAAMkD,SAAQ,SAAA/C,GAIrB,IAAI+E,EAAYJ,EAAKK,MAAM,KAEvBC,EAAMF,EAAUA,EAAUjF,OAAO,GAEjCoF,EAAYlF,EAAKgC,YAAYgD,MAAM,KAEnCG,EAAUD,EAASA,EAASpF,OAAO,GAIpCmF,KAASG,SAASD,GAAW,GAAGE,aAE/BzD,IACG5B,EAAKkC,OACJL,IAEAC,QAMC,UAAT2C,GAEJ,EAAKhF,MAAMI,MAAMkD,SAAQ,SAAA/C,GAErBsF,QAAQC,WAAWvF,EAAKgC,aAExB,IAAI+C,EAAYJ,EAAKK,MAAM,KAEvBC,EAAMF,EAAUA,EAAUjF,OAAO,GAEjCoF,EAAYlF,EAAKgC,YAAYgD,MAAM,KAEnCG,EAAUD,EAASA,EAASpF,OAAO,GAIpCmF,KAASG,SAASD,GAAW,GAAGE,aAE/BzD,IACG5B,EAAKkC,OACJL,IAEAC,QAMhB,EAAKxB,SAAS,CACVsB,UACAC,aACAC,kBA/HW,EAoInB0D,aAAe,WAEXrB,SAASC,eAAe,cAAcC,MAAMC,QAAQ,OACpDH,SAASC,eAAe,SAASqB,SAAU,EAC3CtB,SAASC,eAAe,aAAaqB,SAAU,EAC/CtB,SAASC,eAAe,SAASqB,SAAU,EAE3C,IAAI7D,EAAU,EAAKnC,MAAMI,MAAMC,OAC3B+B,EAAW,EAAGC,EAAa,EAC/B,EAAKrC,MAAMI,MAAMkD,SAAQ,SAAA/C,GAClBA,EAAKkC,OACJL,IAEAC,OAMR,EAAKxB,SAAS,CACVsB,UACAC,aACAC,kBAxJJ,EAAKpC,MAAQ,CACTkC,QAAS,EACTC,WAAY,EACZC,aAAc,GALH,E,qDAUnB,WAGI,IAAIF,EAAUhC,KAAKH,MAAMI,MAAMC,OAC3B+B,EAAW,EAAGC,EAAa,EAC/BlC,KAAKH,MAAMI,MAAMkD,SAAQ,SAAA/C,GAClBA,EAAKkC,OACJL,IAEAC,OAMRlC,KAAKU,SAAS,CACVsB,UACAC,aACAC,mB,oBAkIR,WAAU,IAAD,OACL,OAEI,qCACI,cAAC,IAAD,IACA,sBAAK4D,UAAU,wBAAf,UAII,sBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,mBAAGA,UAAU,kBAAkBC,cAAY,SAC3C,gDAGA,mBAAGD,UAAU,0BAA0BC,cAAY,OAAOC,YAAA,EAASC,WAAS,WAAWC,QAASlG,KAAKsE,aAErG,sBAAK6B,GAAG,aAAaD,QAASlG,KAAK4F,aAAnC,UACI,mBAAGE,UAAU,eAAeC,cAAY,OAAOC,YAAA,EAASC,WAAS,WACjE,mBAAGH,UAAU,2BAA2BC,cAAY,YAGxD,cAAC,IAAD,CAAcI,GAAG,WAAWC,MAAM,SAASC,OAAO,QAAlD,kBAIA,cAAC,IAAD,CAAcF,GAAG,SAASC,MAAM,MAAMC,OAAO,QAA7C,8BAKJ,sBAAKP,UAAU,iBAAf,UACI,qBAAKA,UAAU,UAAf,SACI,qBAAKA,UAAU,OAAf,SAEI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,uBAEA,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,gBAAf,SACI,mBAAGA,UAAU,wBAAwBC,cAAY,aAGzD,mBAAGD,UAAU,aAAb,SAA2B9F,KAAKF,MAAMkC,iBAMlD,qBAAK8D,UAAU,UAAf,SACI,qBAAKA,UAAU,OAAf,SAEI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,0BAEA,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,mBAAf,SACI,mBAAGA,UAAU,wBAAwBC,cAAY,aAGzD,mBAAGD,UAAU,aAAb,SAA2B9F,KAAKF,MAAMmC,oBAMlD,qBAAK6D,UAAU,UAAf,SACI,qBAAKA,UAAU,OAAf,SAEI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,4BAEA,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,qBAAf,SACI,mBAAGA,UAAU,4BAA4BC,cAAY,aAG7D,mBAAGD,UAAU,aAAb,SAA2B9F,KAAKF,MAAMoC,4BAQ1D,sBAAK4D,UAAU,gCAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,mBAAGA,UAAU,kBAAkBC,cAAY,SAC3C,uCAEA,cAAC,IAAD,CAAcI,GAAG,SAASC,MAAM,MAAMC,OAAO,QAA7C,8BAKJ,sBAAKP,UAAU,mBAAf,UAGI,sBAAKA,UAAU,gBAAf,UACI,wEACC9F,KAAKH,MAAMI,MAAMC,OAAS,EAAI,cAAC,EAAD,CAAYD,MAAOD,KAAKH,MAAMI,QAAY,iDAG7E,sBAAK6F,UAAU,eAAf,UACI,sDACE9F,KAAKH,MAAMI,MAAMC,OAAS,EAAI,cAAC,EAAD,CAAYD,MAAOD,KAAKH,MAAMI,QAAY,oDAKlF,sBAAK6F,UAAU,UAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,cAAC,EAAD,MAGJ,sBAAKA,UAAU,eAAf,UACI,0EACE9F,KAAKH,MAAMI,MAAMC,OAAS,EAAI,cAAC,EAAD,CAAaD,MAAOD,KAAKH,MAAMI,QAAW,uDAKtF,qBAAKkG,GAAG,eAAeL,UAAU,mBAAjC,SAEI,sBAAKA,UAAU,YAAf,UAEI,sBAAKA,UAAU,gBAAf,UACI,oBAAIA,UAAU,aAAd,qBAEA,sBAAMA,UAAU,QAAQI,QAASlG,KAAK2E,YAAtC,qBAEJ,sBAAKmB,UAAU,sBAAf,UAEI,6CAEA,sBAAKA,UAAU,YAAf,UAEI,cAACQ,EAAA,EAAD,CACIH,GAAG,QACHI,WAAW,QACXxD,KAAK,QACLyD,KAAK,SACLN,QAAS,kBAAM,EAAKtB,aAAa,YAErC,6CAGJ,sBAAKkB,UAAU,YAAf,UACI,cAACQ,EAAA,EAAD,CACIH,GAAG,YACHI,WAAW,QACXxD,KAAK,QACLyD,KAAK,SACLN,QAAS,kBAAM,EAAKtB,aAAa,gBAErC,iDAGJ,sBAAKkB,UAAU,YAAf,UACI,cAACQ,EAAA,EAAD,CACIH,GAAG,QACHI,WAAW,QACXxD,KAAK,QACLyD,KAAK,SACLN,QAAS,kBAAM,EAAKtB,aAAa,YAErC,qE,GArULvD,aA6XhBC,eAbS,SAAAxB,GAEpB,OADA4F,QAAQC,IAAI,OACN,CACF1F,MAAOH,EAAMG,UAIM,SAAAwG,GACvB,MAAM,KAKKnF,CAA6C+C,I,kJC7W7CiC,E,kDA3BX,WAAYzG,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACT4G,UAAY,IAHD,E,0CAQnB,WACI,OACI,uBACIP,GAAInG,KAAKH,MAAMsG,GACfL,UAAW9F,KAAKH,MAAM0G,WACtBxD,KAAM/C,KAAKH,MAAMkD,KACjB4D,MAAO3G,KAAKH,MAAM6G,UAClBE,YAAa5G,KAAKH,MAAMgH,YACxBC,SAAU9G,KAAKH,MAAMiH,SACrBC,QAAS/G,KAAKH,MAAMkH,QACpBC,SAAUhH,KAAKH,MAAMmH,SACrBd,QAASlG,KAAKH,MAAMqG,QACpBM,KAAMxG,KAAKH,MAAM2G,W,GArBVnF,c,qDCHvB,yPAEO,SAAS4F,EAAMxG,EAAUyG,GAE5B,MAAM,CACFnE,KAAMoE,IACNC,QAAS,CACL3G,WACAyG,aAKL,SAASG,EAAchH,EAAUiH,EAAOC,GAE3C,MAAM,CACFxE,KAAMyE,IACNJ,QAAS,CACL/G,WACAiH,QACAC,eAML,SAASE,EAAQpH,EAAUC,EAAQgH,EAAOI,EAASC,GAEtD,OADAjC,QAAQC,IAAIgC,GACN,CACF5E,KAAM6E,IACNR,QAAS,CACL/G,WACAC,SACAgH,QACAI,UACAC,WAML,SAASE,EAAWC,EAAUzH,EAAUC,EAAQgH,EAAOI,EAASC,GAEnE,MAAM,CACF5E,KAAMgF,IACNX,QAAS,CACLU,WACAzH,WACAC,SACAgH,QACAI,UACAC,WAKL,SAASK,EAAWC,GAEvB,MAAM,CACFlF,KAAMmF,IACNd,QAASa,GAIV,SAASE,EAAYC,GAExB,MAAM,CACFrF,KAAMsF,IACNjB,QAASgB,GAIV,SAASE,EAAanC,GAEzB,MAAM,CACFpD,KAAMwF,IACNnB,QAASjB","file":"static/js/15.be7491ca.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Bar, BarChart, CartesianGrid, Tooltip, XAxis, YAxis } from 'recharts';\nimport {connect} from 'react-redux'\n\nlet userNames, salaryArray\n\nclass SalaryChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            data:[]\n         }\n    }\n\n    componentDidMount(){\n\n        if(this.props.users.length > 0){\n            let data = []\n            userNames = this.props.users.map(user => user.fullName)\n            salaryArray = this.props.users.map(user => user.salary)\n\n            for(var i=0; i<userNames.length; i++){\n                data.push({\n                    userName : userNames[i],\n                    salary: salaryArray[i]\n                })\n            }\n            // console.log(data)\n            this.setState({data: data})\n        }\n    }\n\n    render() { \n        // console.log(userNames);\n        return ( \n             \n            <BarChart width={400} height={250} data={this.state.data} >\n                <CartesianGrid />\n                <XAxis dataKey={\"userName\"}/>\n                <YAxis />\n                <Tooltip/>\n                <Bar dataKey={\"salary\"} fill=\"#708799\"/>\n\n            </BarChart>\n            \n         );\n    }\n}\n\nconst mapStateToProps = state =>{\n    return{\n        users: state.users\n    }\n}\n\nexport default connect(mapStateToProps)(SalaryChart);","import styled from \"styled-components\";\n\nexport default styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 150px;\n  width: 100%;\n  color: #fff;\n  margin: 15px;\n  font-size: 4em;\n`;\n","import React, { Component } from 'react';\nimport Carousel from 'react-elastic-carousel'\nimport Item from './Item';\n\nconst breakPoints = [\n    { width: 1, itemsToShow: 1 },\n    { width: 550, itemsToShow: 2, itemsToScroll: 2 },\n    { width: 768, itemsToShow: 3 },\n    { width: 1200, itemsToShow: 4 }\n  ];\n\nclass ImageCarousel extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { }\n    }\n \n    \n      render () {\n        console.log(this.props.users);\n        return (\n            <Carousel breakPoints={breakPoints}>\n\n                {\n                    this.props.users.map(user => <Item key={user.ID}><img key={user.ID} src={user.avatar} alt=\"profile pic\" /></Item>)\n                }\n\n            </Carousel>\n        )\n      }\n}\n\n\n \nexport default ImageCarousel;","import userEvent from '@testing-library/user-event';\nimport React, { Component } from 'react';\nimport { CartesianGrid, Legend, Line, LineChart, Tooltip, XAxis, YAxis } from 'recharts';\n\nlet chartData = []\n\nclass LineChartP extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            data: \"\"\n        }\n    }\n\n    componentDidMount(){\n        //console.log(this.props);\n        let length = this.props.users.length\n        //console.log(length);\n        const { users } = this.props\n        var matchArray = new Array(length).fill(0)\n\n       for(var i=0; i<length; i++){\n            \n            let allUser = 0, activeUser = 0, inactiveUser = 0\n\n            let chartDate = users[i].createdDate\n            if(matchArray[i] === 0){\n                \n                for(var j=0; j<this.props.users.length; j++){\n                    \n                    if(chartDate === this.props.users[j].createdDate){\n\n                        matchArray[j] = 1\n                        // console.log(matchArray);\n                        allUser++\n                        if(this.props.users[j].status)\n                            activeUser++\n                        else\n                            inactiveUser++\n                    }\n\n                    // console.log(\"in\",j);\n\n                }\n\n                // console.log(\"for\",i);\n                chartData.push({\n                    Date: chartDate,\n                    Total: allUser,\n                    Active: activeUser,\n                    InActive: inactiveUser\n                })\n            }\n        };\n\n        // console.log(chartData);\n        this.setState({\n            data: chartData\n        })\n\n        chartData = []\n    }\n\n\n    render() { \n        return ( \n            \n            <LineChart width={400} height={230} data={this.state.data}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"Date\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"Total\" stroke=\"blue\"/>\n                <Line type=\"monotone\" dataKey=\"Active\" stroke=\"green\" />\n                <Line type=\"monotone\" dataKey=\"InActive\" stroke=\"red\" />\n            </LineChart>\n            \n        );\n    }\n}\n \nexport default LineChartP;","import React, { Component } from 'react';\nimport { Cell, Legend, Pie, PieChart, Tooltip } from 'recharts';\n\nlet chartData = []\nclass PieRechart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            data: \"\"\n         }\n    }\n    COLORS = [\"orange\", \"green\"];\n\n\n    componentWillMount(){\n\n        //let allUser = this.props.users.length\n        // console.log(this.props.users);\n        let activeUser = 0, inactiveUser = 0\n\n        this.props.users.forEach(user => {\n            if(user.status)\n                activeUser++\n            else    \n                inactiveUser++\n        })\n\n        chartData.push({\n            \"Name\": \"Active\",\n            \"Value\": activeUser\n        })\n\n        chartData.push({\n            \"Name\": \"InActive\",\n            \"Value\": inactiveUser\n        })\n\n        // console.log(chartData);\n        this.setState({data: chartData})\n\n        chartData=[]\n    }\n\n    render() { \n        return ( \n            \n            <PieChart width={360} height={230}>\n                <Pie data={this.state.data} color=\"#000000\" dataKey=\"Value\" nameKey=\"Name\" cx=\"50%\" cy=\"50%\" outerRadius={100} fill=\"#8884d8\" >\n                    {\n                        this.state.data.map((entry, index) => <Cell key={`cell-${index}`} fill={this.COLORS[index % this.COLORS.length]} />)\n                    }\n                </Pie>\n                <Tooltip />\n                <Legend />\n            </PieChart>\n        );\n    }\n}\n \nexport default PieRechart;","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\n// import {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\n\n\nclass GoogleMap extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n    render() { \n        return ( \n            <GoogleMapReact\n                bootstrapURLKeys={{ key:  \"AIzaSyDLQtMNQt9UH1-k6ZolKvKlpsVCP227n9g\"}}\n                defaultCenter={{\n                    lat : 59.955413,\n                    lng: 30.337844\n                }}\n                defaultZoom={15}\n            >\n            {/* <AnyReactComponent\n              lat={59.955413}\n              lng={30.337844}\n              text=\"My Marker\" \n            /> */}\n          </GoogleMapReact>\n            // <Map google={this.props.google}>\n        \n            //     <Marker\n            //         title={'The marker`s title will appear as a tooltip.'}\n            //         name={'SURAT'}\n            //         position={{lat: 21.170240, lng: 72.831062}} \n            //     />\n        \n            //     <InfoWindow onClose={this.onInfoWindowClose}>\n            //         {/* <div>\n            //         <h1>{this.state.selectedPlace.name}</h1>\n            //         </div> */}\n            //     </InfoWindow>\n            // </Map>\n        );\n    }\n\n}\n\nexport default GoogleMap\n \n// export default GoogleApiWrapper({\n//     apiKey: \"AIzaSyDLQtMNQt9UH1-k6ZolKvKlpsVCP227n9g\"\n//   })(GoogleMap)","import React, { Component } from 'react';\nimport './DashboardContent.scss'\nimport {connect} from 'react-redux'\nimport SalaryChart from '../../SalaryChart';\nimport ImageCarousel from '../../ReusableComponent/ImageCarousel/ImageCarousel';\nimport ReactTooltip from 'react-tooltip';\nimport InputTag from '../../ReusableComponent/InputTag';\nimport LineChartP from '../../LineChartP';\nimport PieRechart from '../../PieRechart';\nimport GoogleMap from '../../GoogleMap';\nimport { fetchUsers } from '../../Redux/adminAction';\nimport { NewHeader } from '../Dashboard/Dashboard';\n\n\n\nclass DashboardContent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            allUser: 0,\n            activeUser: 0,\n            inactiveUser: 0\n        }\n    }\n\n\n    componentDidMount(){\n        // console.log(\"mount\");\n        // console.log(\"data\", this.props.users);\n        var allUser = this.props.users.length\n        var activeUser=0, inactiveUser=0\n        this.props.users.forEach(user => {\n            if(user.status)\n                activeUser++\n            else\n                inactiveUser++\n        })\n\n        // console.log(activeUser);\n        // console.log(inactiveUser);\n\n        this.setState({\n            allUser,\n            activeUser,\n            inactiveUser\n        })\n    }\n\n    showFilter = () => {\n        document.getElementById(\"filter-modal\").style.display=\"block\";\n    }\n\n    closeFilter = () => {\n        document.getElementById(\"filter-modal\").style.display=\"none\";\n    }\n\n    handleFilter = (text) => {\n        document.getElementById(\"filter-modal\").style.display=\"none\";\n        document.getElementById(\"filter-div\").style.display=\"block\";\n\n        // get today date\n        var today = new Date(),\n        date = today.getFullYear() + '/' + (today.getMonth() + 1) + '/' + today.getDate();\n\n        var allUser=0, activeUser=0, inactiveUser=0\n\n        if(text === \"today\"){\n            \n            // console.log(\"today\");\n            this.props.users.forEach(user => {\n                // console.log(user.createdDate, date);\n                if(user.createdDate === date){\n                    // console.log(\"und\");\n                    allUser++\n                    if(user.status)\n                        activeUser++\n                    else\n                        inactiveUser++\n\n                }\n            });\n        }\n\n        else if(text === \"yesterday\"){\n\n            // console.log(\"Yesterday\");\n            this.props.users.forEach(user => {\n\n                // console.log(typeof(user.createdDate));\n                // get the created day\n                var todayDate = date.split(\"/\")\n\n                var day = todayDate[todayDate.length-1]\n\n                var userDate  = user.createdDate.split(\"/\")\n\n                var userDay = userDate[userDate.length-1]\n\n                // console.log(day);\n                // console.log(parseInt(userDay) + 1);\n                if(day === (parseInt(userDay) + 1).toString()){\n                    // console.log(\"under\");\n                    allUser++\n                    if(user.status)\n                        activeUser++\n                    else\n                        inactiveUser++\n\n                }\n            });\n        }\n\n        else if(text === \"last7\"){\n            // console.log(\"last7\");\n            this.props.users.forEach(user => {\n\n                console.log(typeof(user.createdDate));\n                // get the created day\n                var todayDate = date.split(\"/\")\n\n                var day = todayDate[todayDate.length-1]\n\n                var userDate  = user.createdDate.split(\"/\")\n\n                var userDay = userDate[userDate.length-1]\n\n                // console.log(day);\n                // console.log(parseInt(userDay) + 1);\n                if(day === (parseInt(userDay) + 7).toString()){\n                    // console.log(\"under\");\n                    allUser++\n                    if(user.status)\n                        activeUser++\n                    else\n                        inactiveUser++\n\n                }\n            });\n        }\n\n        this.setState({\n            allUser,\n            activeUser,\n            inactiveUser\n        })\n\n    }\n\n    removeFilter = () => {\n\n        document.getElementById(\"filter-div\").style.display=\"none\";\n        document.getElementById(\"today\").checked = false\n        document.getElementById(\"yesterday\").checked = false\n        document.getElementById(\"last7\").checked = false\n\n        var allUser = this.props.users.length\n        var activeUser=0, inactiveUser=0\n        this.props.users.forEach(user => {\n            if(user.status)\n                activeUser++\n            else\n                inactiveUser++\n        })\n\n        // console.log(activeUser);\n        // console.log(inactiveUser);\n\n        this.setState({\n            allUser,\n            activeUser,\n            inactiveUser\n        })\n    }\n\n    render() { \n        return ( \n\n            <>\n                <NewHeader />\n                <div className=\"dashboard-content-div\">\n                    \n                    \n\n                    <div className=\"user-statistics\">\n                        <div className=\"user-statistics-header\">\n                            <i className=\"fa fa-bar-chart\" aria-hidden=\"true\"></i>\n                            <p>User Statistics</p>\n\n\n                            <i className=\"fa fa-calendar calender\" aria-hidden=\"true\" data-tip data-for=\"calender\" onClick={this.showFilter}></i>\n                            \n                            <div id=\"filter-div\" onClick={this.removeFilter}>\n                                <i className=\"fa fa-filter\" aria-hidden=\"true\" data-tip data-for=\"filter\"></i>\n                                <i className=\"fa fa-times filter-close\" aria-hidden=\"true\"></i>\n                            </div>\n\n                            <ReactTooltip id=\"calender\" place=\"bottom\" effect=\"solid\">\n                                Edit\n                            </ReactTooltip>\n\n                            <ReactTooltip id=\"filter\" place=\"top\" effect=\"solid\">\n                                Remove Filter\n                            </ReactTooltip>\n                        </div>\n\n                        <div className=\"card-container\">\n                            <div className=\"padding\">\n                                <div className=\"card\">\n\n                                    <div className=\"card-body\">\n                                        <h5 className=\"card-title\">All Users</h5>\n\n                                        <div className=\"pulsating-circle\">\n                                            <div className=\"card-icon-all\">\n                                                <i className=\"fa fa-users card-icon\" aria-hidden=\"true\"></i>\n                                            </div>\n                                        </div>\n                                        <p className=\"card-value\">{this.state.allUser}</p>\n                                    </div>\n\n                                </div>\n                            </div>\n\n                            <div className=\"padding\">\n                                <div className=\"card\">\n\n                                    <div className=\"card-body\">\n                                        <h5 className=\"card-title\">Active Users</h5>\n                                        \n                                        <div className=\"pulsating-circle\">\n                                            <div className=\"card-icon-active\">\n                                                <i className=\"fa fa-check card-icon\" aria-hidden=\"true\"></i>\n                                            </div>\n                                        </div>\n                                        <p className=\"card-value\">{this.state.activeUser}</p>\n                                    </div>\n\n                                </div>\n                            </div>\n\n                            <div className=\"padding\">\n                                <div className=\"card\">\n\n                                    <div className=\"card-body\">\n                                        <h5 className=\"card-title\">Inactive Users</h5>\n                                        \n                                        <div className=\"pulsating-circle\">\n                                            <div className=\"card-icon-inactive\">\n                                                <i className=\"fa fa-eye-slash card-icon\" aria-hidden=\"true\"></i>\n                                            </div>\n                                        </div>\n                                        <p className=\"card-value\">{this.state.inactiveUser}</p>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"user-statistics second-header\">\n                        <div className=\"user-statistics-header\">\n                            <i className=\"fa fa-bar-chart\" aria-hidden=\"true\"></i>\n                            <p>Charts</p>\n\n                            <ReactTooltip id=\"filter\" place=\"top\" effect=\"solid\">\n                                Remove Filter\n                            </ReactTooltip>\n                        </div>\n\n                        <div className=\"linechart-margin\">\n\n                        \n                            <div className=\"linechart-div\">\n                                <p>Review Of User statistics based on date</p>\n                                {this.props.users.length > 0 ? <LineChartP users={this.props.users} /> : <p>No User Found</p>}\n                            </div>\n                        \n                            <div className=\"piechart-div\">\n                                <p>Active/InActive users</p>\n                                { this.props.users.length > 0 ? <PieRechart users={this.props.users} /> : <p>No User Found</p>}\n                            </div>\n                        \n                        </div>\n\n                        <div className=\"map-div\">\n                            <div className=\"google-map-container\">\n                                <GoogleMap  />\n                            </div>\n\n                            <div className=\"salary-chart\">\n                                <p>Review Of User statistics based on Salary</p>\n                                { this.props.users.length > 0 ? <SalaryChart users={this.props.users}/> : <p>No User Found</p>}\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <div id=\"filter-modal\" className=\"card filter-card\">\n\n                        <div className=\"card-body\">\n\n                            <div className=\"filter-header\">\n                                <h5 className=\"card-title\">FILTERS</h5>\n\n                                <span className=\"close\" onClick={this.closeFilter}>&times;</span>\n                            </div>\n                            <div className=\"filter-card-content\">\n\n                                <p>Filter Types</p>\n\n                                <div className=\"radio-div\">\n                                    \n                                    <InputTag\n                                        id=\"today\"\n                                        inputClass=\"radio\"\n                                        type=\"radio\"\n                                        name=\"filter\"\n                                        onClick={() => this.handleFilter(\"today\")}\n                                    />\n                                    <label>Today</label>\n                                </div>\n\n                                <div className=\"radio-div\">\n                                    <InputTag\n                                        id=\"yesterday\"\n                                        inputClass=\"radio\"\n                                        type=\"radio\"\n                                        name=\"filter\"\n                                        onClick={() => this.handleFilter(\"yesterday\")}\n                                    />\n                                    <label>Yesterday</label>\n                                </div>\n\n                                <div className=\"radio-div\">\n                                    <InputTag\n                                        id=\"last7\"\n                                        inputClass=\"radio\"\n                                        type=\"radio\"\n                                        name=\"filter\"\n                                        onClick={() => this.handleFilter(\"last7\")}\n                                    />\n                                    <label>Last 7 days</label>\n                                </div>\n                                \n\n                            </div>\n                        </div>\n\n                    </div>\n\n\n\n                    {/* <div className=\"dashboard-cards\">\n                        <div className=\"total-users\">\n                            <div className=\"progress blue\"> <span className=\"progress-left\"> <span className=\"progress-bar\"></span> </span> <span className=\"progress-right\"> <span className=\"progress-bar\"></span> </span>\n                                <div className=\"progress-value\">{this.props.users.length}</div>\n                            </div>\n                            <p>Total Users</p>\n                        </div>\n\n                        <div className=\"total-salary\">\n                            <div className=\"progress blue\"> <span className=\"progress-left\"> <span className=\"progress-bar\"></span> </span> <span className=\"progress-right\"> <span className=\"progress-bar\"></span> </span>\n                                <div className=\"progress-value\">\n                                    {this.props.users.length > 0 ? \"$\"+this.props.users.reduce(function(acc, user) { return acc + parseInt(user.salary)},0) : 0}\n                                    \n                                </div>\n                            </div>\n                            <p>Total Salary</p>\n                        </div>\n                    </div>\n\n                    <div className=\"column-chart\">\n                        <SalaryChart></SalaryChart>\n                    </div>\n\n                    <div className=\"image-carousel\">\n                    <ImageCarousel users={this.props.users}/>\n                    </div> */}\n                </div>\n            </>\n         );\n    }\n}\n\nconst mapStateToProps = state => {\n    console.log(\"get\");\n    return{\n        users: state.users\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        // fetchUsers: () => dispatch(fetchUsers())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardContent);","import React, { Component } from 'react';\nimport './InputTag.scss'\n\nclass InputTag extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            inputText : \"\"\n        };\n    }\n\n    \n    render() {\n        return (\n            <input\n                id={this.props.id} \n                className={this.props.inputClass} \n                type={this.props.type} \n                value={this.props.inputText} \n                placeholder={this.props.placeHolder} \n                onChange={this.props.onChange} \n                onKeyUp={this.props.onKeyUp}\n                disabled={this.props.disabled} \n                onClick={this.props.onClick}\n                name={this.props.name}\n            />\n           \n        );\n    }\n}\n\nexport default InputTag;","import {LOGIN, UPDATE_PROFILE, ADD_USER, UPDATE_USER, DELETE_USER, DELETE_USERS, CHANGE_STATUS, FETCH_USERS} from './actionType'\n\nexport function login(userName, password){\n    // console.log(userName);\n    return{\n        type: LOGIN,\n        payload: {\n            userName,\n            password\n        }\n    }\n}\n\nexport function updateProfile(fullName, email, profileImg){\n    // console.log(userName);\n    return{\n        type: UPDATE_PROFILE,\n        payload: {\n            fullName,\n            email,\n            profileImg\n        }\n    }\n}\n\n\nexport function addUser(fullName, salary, email, contact, avatar){\n    console.log(avatar);\n    return{\n        type: ADD_USER,\n        payload: {\n            fullName,\n            salary,\n            email,\n            contact,\n            avatar\n        }\n    }\n}\n\n\nexport function updateUser(updateId, fullName, salary, email, contact, avatar){\n    \n    return{\n        type: UPDATE_USER,\n        payload: {\n            updateId,\n            fullName,\n            salary,\n            email,\n            contact,\n            avatar\n        }\n    }\n}\n\nexport function deleteUser(deleteId){\n    // console.log(deleteId);\n    return{\n        type: DELETE_USER,\n        payload: deleteId\n    }\n}\n\nexport function deleteUsers(deletedIdArray){\n    // console.log(deleteId);\n    return{\n        type: DELETE_USERS,\n        payload: deletedIdArray\n    }\n}\n\nexport function changeStatus(id){\n    // console.log(deleteId);\n    return{\n        type: CHANGE_STATUS,\n        payload: id\n    }\n}\n\nexport function fetchUsers(fullName, salary, email, contact, avatar){\n    console.log(avatar);\n    return{\n        type: FETCH_USERS,\n    }\n}\n"],"sourceRoot":""}