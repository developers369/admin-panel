{"version":3,"sources":["Components/Users/Users.jsx","Components/Users/PaginationTable/PaginationTable.jsx","ReusableComponent/SelectTag/SelectTag.jsx","Components/Users/UsersTable/UsersTable.jsx","Components/Users/Filter/Filter.jsx","ReusableComponent/ReactPopup/ReactPopup.jsx","ReusableComponent/InputTag/InputTag.jsx","Redux/adminAction.js"],"names":["changeStatusId","deletedIdArray","index","rowsValue","SelectTag","Component","props","state","id","this","selectId","className","selectClass","value","selectValue","onChange","optionArray","map","option","Math","random","UsersTable","console","log","selectAll","data-tip","data-for","InputTag","inputClass","type","inputText","onClick","onSelectAll","users","length","user","ID","onInputClick","to","handleClick","aria-hidden","changeStatus","place","effect","fullName","email","salary","contact","status","colSpan","style","textAlign","totalRecords","currentPage","totalPage","prevPage","nextPage","optionArrayForSort","optionArrayForFilter","Filter","sort","filter","handleSort","handleFilter","Button","btnclass","btnName","handleApply","handleClear","deleteId","isChangedRows","isClickedPrev","Users","calculateUserCardValues","allUser","activeUser","inactiveUser","forEach","setState","temp","indexOf","push","splice","showPopUp","modelType","isShowPopup","modelText","modelBtnName","usersData","ind","handleDelete","document","getElementById","innerHTML","deleteUser","deleteUsers","handleCancel","handleStatus","e","target","today","Date","date","getFullYear","getMonth","getDate","createdDate","todayDate","split","day","parseInt","a","b","toLowerCase","handleRows","rowsPerPage","isLoader","filterUserData","handleNextPage","rows","i","handlePrevPage","deSelectAll","checked","multiSelectCount","handleSelectAll","inactiuveUser","undefined","cookies","get","history","ceil","Fragment","ReactPopup","open","iconDivClass","iconName","modelHeaderText","modalPositiveBtn","onDelete","onCancel","connect","dispatch","withCookies","isOpen","appElement","overlayClassName","modelBtnId","placeholder","placeHolder","onKeyUp","disabled","name","login","userName","password","LOGIN","payload","updateProfile","profileImg","UPDATE_PROFILE","addUser","avatar","ADD_USER","updateUser","updateId","UPDATE_USER","DELETE_USER","DELETE_USERS","CHANGE_STATUS"],"mappings":"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","file":"static/js/9.e88c242b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport './Users.scss'\nimport Button from '../../ReusableComponent/Button/';\nimport {changeStatus, deleteUser, deleteUsers, fetchUsers} from '../../Redux/adminAction'\nimport {withCookies, Cookies } from 'react-cookie'\nimport {instanceOf} from 'prop-types'\nimport PaginationTable from './PaginationTable/PaginationTable';\nimport UsersTable from './UsersTable';\nimport Filter from './Filter';\nimport ReactPopup from '../../ReusableComponent/ReactPopup';\nimport { NewHeader } from '../Dashboard/Dashboard';\n\nlet deleteId = \"\"\nlet changeStatusId\nlet deletedIdArray\nlet isChangedRows = false\nlet isClickedPrev = false\nlet index\n\nclass Users extends Component {\n    \n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    }\n    \n    constructor(props) {\n        super(props);\n        this.state = { \n            deleteId: 0,\n            deletedIdArray: [],\n            className: \"modal\",\n            allUser: \"\",\n            activeUser: \"\",\n            inactiuveUser: \"\",\n\n            // filter data\n            sort: \"\",\n            filter: \"\",\n            usersData: [],\n\n            // footer of pagination table\n            rowsPerPage: 5,\n            currentPage: 0,\n            totalPage: 0,\n\n            // loader\n            isLoader: false,\n            isShowPopup: false,\n            selectAll: false,\n            modelText: \"\",\n            modelBtnName: \"\"\n    \n        }\n\n        console.log(this.state.deletedIdArray);\n    }\n\n    componentWillMount(){\n        \n        const {cookies} = this.props\n        \n        if(cookies.get(\"Name\") === undefined){\n            this.props.history.push(\"/\")\n        }\n    }\n\n    componentDidMount(){\n        // console.log(\"mount\");\n        let allUser = this.calculateUserCardValues()\n\n        \n\n        this.filterUserData(allUser)\n\n  \n    }\n    \n    componentDidUpdate(){\n       // console.log(this.state.selectAll);\n        if(isChangedRows){\n            isChangedRows = false\n            console.log(\"DidUpdate..........\");\n            let allUser = this.calculateUserCardValues()\n\n            console.log(allUser);\n            if(allUser > 0){\n                this.setState({currentPage: 1})\n            }else{\n                this.setState({currentPage: 0})\n            }\n\n            this.filterUserData(allUser)\n        }\n\n        if(isClickedPrev){\n            isClickedPrev = false\n            let rows = []\n\n            let index = this.state.rowsPerPage*this.state.currentPage\n            for(var i=(index-this.state.rowsPerPage); i<index; i++){\n\n                if(i < this.props.users.length)\n                    rows.push(this.props.users[i])\n            }\n\n            this.setState({\n                usersData: rows\n            })\n        }\n        \n    }\n\n    calculateUserCardValues = () => {\n        var allUser = this.props.users.length\n        var activeUser=0, inactiveUser=0\n        this.props.users.forEach(user => {\n            if(user.status)\n                activeUser++\n            else\n                inactiveUser++\n        })\n\n        // console.log(activeUser);\n        // console.log(inactiveUser);\n\n        this.setState({\n            allUser,\n            activeUser,\n            inactiveUser\n        })\n\n        if(allUser > 0){\n            this.setState({currentPage: 1})\n        }else{\n            this.setState({currentPage: 0})\n        }\n\n        return allUser\n    }\n\n\n    filterUserData(allUser){\n        // calculate total page\n        let totalPage = Math.ceil(allUser/this.state.rowsPerPage)\n\n        this.setState({totalPage})\n\n        // now store records according to rows per page\n        let rows = []\n\n        for(var i=0; i<this.state.rowsPerPage; i++){\n\n            if(i < this.props.users.length)\n                rows.push(this.props.users[i])\n        }\n\n        console.log(\"new array---------\", rows);\n\n        // now set filter array to the userData\n        this.setState({usersData: rows})\n\n        if(this.state.usersData.length > 0){\n            this.setState({currentPage: 1})\n        }\n\n        return false\n    }\n\n\n    handleClick = (id) => {\n\n        //this.setState({multiSelectCount: this.state.multiSelectCount + 1})\n       // alert(id);\n        let temp = this.state.deletedIdArray\n        let index = temp.indexOf(id)\n        if(index === -1)\n            temp.push(id)\n        else\n            temp.splice(index, 1)\n\n        this.setState({deletedIdArray: temp})\n    \n        // alert(this.state.checkbox + \" \"+ id)\n    }\n\n    showPopUp = (id, modelType) => {\n        console.log(modelType);\n        if(modelType === \"delete\"){\n            this.setState({isShowPopup: true, modelText: \"You will not be able to recover this!\", modelBtnName: \"Yes, delete it!\"})\n            if(id !== -1){\n                deleteId = id\n                console.log(\"single..........\", deleteId);\n            }else{\n                console.log(\"all.............\", this.state.deletedIdArray);\n                deletedIdArray = this.state.deletedIdArray\n            }\n        }\n\n        \n        else if(modelType === \"status\"){\n\n            changeStatusId = id\n            this.setState({modelBtnName: \"Yes, changed it!\"})\n             \n            this.state.usersData.map((user, ind) => {\n                if(user.ID === id){\n                    index = ind\n                }\n            })\n\n            if(this.state.usersData[index].status)\n                this.setState({isShowPopup: true, modelText: \"User status will be changed to Deactivated\"})\n            else\n                this.setState({isShowPopup: true, modelText: \"User status will be changed to Activated\"})\n\n        }\n        \n      \n        \n    }\n\n    handleDelete = () => {\n        \n        if(document.getElementById(\"modelButton\").innerHTML === \"Yes, delete it!\"){\n            console.log(deleteId);\n            if(deleteId !== \"\"){\n                let temp = this.state.deletedIdArray\n                let index = temp.indexOf(deleteId)\n                temp.splice(index, 1)\n\n                this.setState({deletedIdArray: temp})\n\n                this.props.deleteUser()\n                deleteId = \"\"\n                this.setState({isShowPopup: false})\n                isChangedRows = true\n                console.log(\"....single...\", this.state.deletedIdArray.length);\n            }else{\n                console.log(\"......all..........\", this.state.deletedIdArray.length);\n                this.props.deleteUsers()\n                this.setState({deletedIdArray: []})\n                deletedIdArray = \"\"\n                isChangedRows = true\n                this.setState({isShowPopup: false})\n                //this.setState({className: \"modal\"})\n            }\n        }else{\n           \n            this.props.changeStatus()\n            isChangedRows = true\n            this.setState({isShowPopup: false})\n        }\n\n    }\n\n    handleCancel = () => {\n        this.setState({isShowPopup: false})\n    }\n\n    handleStatus = (id) => {\n        //alert(\"STATUS\")\n        \n    }\n\n    // filter part =-------\n    handleSort = (e) => {\n        // alert(e.target.value)\n        this.setState({sort: e.target.value})\n    }\n\n    handleFilter = (e) => {\n        // alert(e.target.value)\n        this.setState({filter: e.target.value})\n    }\n\n    handleApply = () => {\n        if(this.state.sort !== \"--SELECT--\"){\n\n            var today = new Date(),\n            date = today.getFullYear() + '/' + (today.getMonth() + 1) + '/' + today.getDate();\n\n            let temp = this.state.usersData\n            console.log(\"HELOOOOOO\");\n            if(this.state.filter === \"Today\"){\n\n                temp = temp.filter(user => user.createdDate === date)\n                console.log(temp);\n            }\n\n            else if(this.state.filter === \"Yesterday\"){\n\n                // get the created day\n                var todayDate = date.split(\"/\")\n\n                var day = todayDate[todayDate.length-1]\n\n                // console.log(\"hhhhhhh//////\", temp[0].createdDate.split(\"/\")[2]);\n           \n                temp = temp.filter(user => parseInt(user.createdDate.split(\"/\")[0]) === parseInt(day-1))\n                console.log(temp);\n                \n            }\n            \n            // sort by name\n            if(this.state.sort === \"Name\"){\n\n                temp.sort((a,b) => {\n                    if(a.fullName.toLowerCase() < b.fullName.toLowerCase()) { return -1; }\n                    if(a.fullName.toLowerCase() > b.fullName.toLowerCase()) { return 1; }\n                    return 0;\n                }) \n                console.log(temp)\n\n\n            }\n\n            // sort by email\n            else if(this.state.sort === \"Email\"){\n\n                temp.sort((a,b) => {\n                    if(a.email.toLowerCase() < b.email.toLowerCase()) { return -1; }\n                    if(a.email.toLowerCase() > b.email.toLowerCase()) { return 1; }\n                    return 0;\n                }) \n                console.log(temp)\n\n            }\n\n            // sort by contact\n            else if(this.state.sort === \"Contact\"){\n\n                temp.sort((a,b) => {\n                    if(a.contact.toLowerCase() < b.contact.toLowerCase()) { return -1; }\n                    if(a.contact.toLowerCase() > b.contact.toLowerCase()) { return 1; }\n                    return 0;\n                }) \n\n                console.log(temp)\n\n            }\n\n\n            // set sorted array\n            this.setState({usersData: temp})\n        }\n    }\n\n    handleClear = () => {\n       // alert(\"Clear\")\n        this.setState({\n            sort: \"--SELECT--\", \n            filter: \"--SELECT--\",\n            usersData: this.props.users\n        })\n\n    }\n\n    // footer of pagination table\n    handleRows = (e) => {\n        // alert(e.target.value)\n\n        this.setState({rowsPerPage: e.target.value, isLoader: true})\n        isChangedRows = true\n        this.setState({isLoader: false})\n        this.filterUserData(this.props.users.length)\n        \n    }   \n\n    handleNextPage = () => {\n        //alert(\"next\")\n        // console.log(this.state.currentPage);\n        if(this.state.currentPage < this.state.totalPage){\n            let rows = []\n\n            let index = this.state.rowsPerPage*this.state.currentPage\n            for(var i=index; i<(index + this.state.rowsPerPage); i++){\n\n                if(i < this.props.users.length)\n                    rows.push(this.props.users[i])\n            }\n\n            this.setState({\n                currentPage: this.state.currentPage + 1,\n                usersData: rows\n            })\n        }\n    }\n\n    handlePrevPage = () => {\n        //alert(\"prev\")\n        \n        if(this.state.currentPage > 1){\n            isClickedPrev = true\n            this.setState({currentPage: this.state.currentPage - 1 })\n        }\n            \n    \n    }\n\n    deSelectAll = () => {\n        \n\n        // console.log(document.getElementById(\"select-input\").checked);\n        this.state.deletedIdArray.forEach(value => {\n            document.getElementById(value).checked = false\n        })\n\n        // empty deletedIdarray\n        this.setState({deletedIdArray: []})\n        this.setState({multiSelectCount: 0})\n        this.setState({selectAll: false})\n        \n        \n    }\n\n    handleSelectAll = () => {\n\n        let deletedIdArray = []\n        if(!this.state.selectAll){\n\n            this.state.usersData.forEach(user => {\n                document.getElementById(user.ID).checked = true\n                deletedIdArray.push(user.ID)\n                \n            })\n            this.setState({selectAll: true, deletedIdArray})\n        }else{\n            this.state.usersData.forEach(user => {\n                document.getElementById(user.ID).checked = false\n            })\n            this.setState({selectAll: false, deletedIdArray: []})\n        }\n    }\n\n    render() { \n        console.log(\"mount\", this.state.usersData);\n        console.log(\"mount1\", this.props.users);\n        console.log(\"render\");\n        // console.log(this.props.users);\n        return (\n            \n            <React.Fragment>\n\n                <NewHeader />\n                <div className=\"users-div\">\n                    \n                    <div className=\"user-card-header\">\n\n                        <div className=\"card-container-header\">\n                            <p>Users</p>\n                            <Link to=\"/dashboard/dashboard-content/action\">\n                                <Button\n                                        btnclass=\"userAddBtn\"\n                                        btnName=\"Add User\"\n                                />\n                            </Link>\n                        </div>\n\n                        <div className=\"user-card-container\">\n                            <div className=\"card\">\n\n                                <div className=\"card-body\">\n                                    <h5 className=\"card-title\">All Users</h5>\n\n                                    <div className=\"circle\">\n                                        <div className=\"card-icon-all\">\n                                            <i className=\"fa fa-users card-icon\" aria-hidden=\"true\"></i>\n                                        </div>\n                                    </div>\n                                    <p className=\"card-value\">{this.state.allUser}</p>\n                                </div>\n\n                            </div>\n\n                            <div className=\"card\">\n\n                                <div className=\"card-body\">\n                                    <h5 className=\"card-title\">Active Users</h5>\n                                    \n                                    <div className=\"circle\">\n                                        <div className=\"card-icon-active\">\n                                            <i className=\"fa fa-check card-icon\" aria-hidden=\"true\"></i>\n                                        </div>\n                                    </div>\n                                    <p className=\"card-value\">{this.state.activeUser}</p>\n                                </div>\n\n                            </div>\n\n                            <div className=\"card\">\n\n                                <div className=\"card-body\">\n                                    <h5 className=\"card-title\">Inactive Users</h5>\n                                    \n                                    <div className=\"circle\">\n                                        <div className=\"card-icon-inactive\">\n                                            <i className=\"fa fa-eye-slash card-icon\" aria-hidden=\"true\"></i>\n                                        </div>\n                                    </div>\n                                    <p className=\"card-value\">{this.state.inactiveUser}</p>\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <Filter \n                            sort={this.state.sort}\n                            filter={this.state.filter}\n                            handleSort={(e) => this.handleSort(e)}\n                            handleFilter={(e) => this.handleFilter(e)}\n                            handleApply={this.handleApply}\n                            handleClear={this.handleClear}\n                        />\n                    </div>\n                \n                    {this.state.deletedIdArray.length > 1 && (\n                        \n                        <div className=\"multi-select-div\">\n\n                            <p><i className=\"fa fa-minus-square minus\" aria-hidden=\"true\" onClick={this.deSelectAll}></i>{this.state.deletedIdArray.length} row(s) selected.</p>\n\n                            <Button \n                                btnclass=\"multi-delete-btn\"\n                                btnName=\"Delete\"\n                                onClick={() => this.showPopUp(-1)}\n                            />\n                        </div>\n\n                    ) }\n\n                    <UsersTable \n                        users={this.state.usersData}\n                        totalRecords={this.props.users.length} \n                        rowsPerPage={this.state.rowsPerPage}\n                        currentPage={this.state.currentPage}\n                        totalPage={this.state.totalPage}\n                        selectAll={this.state.selectAll}\n                        onChange={(e) => this.handleRows(e)}\n                        nextPage={this.handleNextPage}\n                        prevPage={this.handlePrevPage}\n                        onInputClick={(id) => this.handleClick(id)}\n                        onClick={(id) => this.showPopUp(id, \"delete\")}\n                        onSelectAll={this.handleSelectAll}\n                        changeStatus={(id) => this.showPopUp(id, \"status\")}\n                    />\n\n                </div>\n                \n                <ReactPopup \n                    open={this.state.isShowPopup}\n                    iconDivClass=\"warning-delete-div\"\n                    iconName=\"fa fa-exclamation fa-3x\"\n                    modelHeaderText=\"Are You Sure!\"\n                    modelText={this.state.modelText}\n                    modelBtnName={this.state.modelBtnName}\n                    modalPositiveBtn=\"react-model-btn-delete\"\n                    onDelete={this.handleDelete}\n                    onCancel={this.handleCancel}\n                />\n\n            </React.Fragment>\n\n            \n            \n            \n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    console.log(state.users);\n    return{\n        users: state.users\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        deleteUser: () => dispatch(deleteUser(deleteId)),\n        deleteUsers: () => dispatch(deleteUsers(deletedIdArray)),\n        changeStatus: () => dispatch(changeStatus(changeStatusId)),\n        // fetchUsers: () => dispatch(fetchUsers())\n    }\n}\n \nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withCookies(Users));\n\n","import React, { Component } from 'react';\nimport {MDBDataTable} from 'mdbreact'\nimport './PaginationTable.scss'\nimport InputTag from '../../../ReusableComponent/InputTag';\n\nimport { Link } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\n\n\nlet rowsValue = []\n\nclass PaginationTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            data: []\n        }\n    }\n\n    componentDidMount(){\n        console.log(\"mount\",this.props.users);\n        this.readData(this.props.users)\n    }\n\n    componentWillReceiveProps(nextProps){\n        //console.log(\"next\",this.nextProps.users);\n        if(this.props !== nextProps)\n            this.readData(nextProps.users)\n    }\n    \n    readData(users){\n        //console.log(\"Mount-------\");\n        //console.log(this.props.users);\n        if(users.length > 0){\n    \n            users.map(user => {\n                console.log(user.ID);\n                rowsValue.push({\n                    btnAction: <div className=\"action-btn-container\">\n                        <div className=\"user-action-btn-checkbox\" data-tip data-for=\"select\" >\n                            <InputTag\n                                inputClass=\"checkbox\"\n                                type=\"checkbox\"\n                                inputText={this.props.checkboxValue}\n                                onClick={() => this.props.onInputClick(user.ID)}\n                            />\n                        </div>\n\n                        <Link to={'/dashboard/dashboard-content/action/'+user.ID}>\n                            <div className=\"user-action-btn-div\"  data-tip data-for=\"edit\" onClick={this.handleClick}>\n                                <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                                <button className=\"user-action-button-edit\"></button>\n                            </div>\n                        </Link>\n\n                        <div className=\"user-action-btn-div\"  data-tip data-for=\"delete\" onClick={() => this.props.onClick(user.ID)}>\n                            <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                            <button className=\"user-action-button-delete\"></button>\n                            \n                        </div>\n\n                        <div className=\"user-action-btn-checkbox\" data-tip data-for=\"status\">\n                            <InputTag\n                                inputClass=\"checkbox\"\n                                type=\"checkbox\"\n                                inputText={this.props.checkboxValue}\n                                onClick={() => this.props.onStatus(user.ID)}\n                            />\n                            \n                        </div>\n\n\n                        <ReactTooltip id=\"select\" place=\"top\" effect=\"solid\">\n                            Select\n                        </ReactTooltip>\n\n                        <ReactTooltip id=\"status\" place=\"top\" effect=\"solid\">\n                            Active/Deactive\n                        </ReactTooltip>\n\n                        <ReactTooltip id=\"edit\" place=\"top\" effect=\"solid\">\n                            Edit\n                        </ReactTooltip>\n                        \n                        <ReactTooltip id=\"delete\" place=\"top\" effect=\"solid\">\n                            Delete\n                        </ReactTooltip>\n\n                        \n                    </div>,\n                    fullName : user.fullName,\n                    email: user.email,\n                    salary: user.salary,\n                    contact: user.contact,\n                    avatar: <img src={user.avatar} style={{height:\"50px\", width: \"50px\"}} alt=\"Avatar\" />,\n                    status: user.status ? <span className=\"badge badge-success\">ACTIVE</span> : <span className=\"badge badge-danger\">DEACTIVE</span>\n                })\n            })\n                \n            this.setState({data : {\n                columns: [\n                    {\n                        label: \"\",\n                        field: \"btnAction\",\n                        sort: \"asc\",\n                        width: 150\n                    },\n                    {\n                        label: \"Avatar\",\n                        field: \"avatar\",\n                        sort: \"asc\",\n                        width: 150\n                    },\n                    {\n                        label: \"Name\",\n                        field: \"fullName\",\n                        sort: \"asc\",\n                        width: 150\n                    },\n                    {\n                        label: \"Email\",\n                        field: \"email\",\n                        sort: \"asc\",\n                        width: 150\n                    },\n                    {\n                        label: \"Salary\",\n                        field: \"salary\",\n                        sort: \"asc\",\n                        width: 150\n                    },\n                    {\n                        label: \"Status\",\n                        field: \"status\",\n                        sort: \"asc\",\n                        width: 150\n                    },\n                    {\n                        label: \"Contact\",\n                        field: \"contact\",\n                        sort: \"asc\",\n                        width: 150\n                    }\n\n                ],\n                rows: rowsValue\n            }})\n            // console.log(\",....\",rowsValue);\n        }\n\n        rowsValue=[]\n        \n    }\n\n    \n\n\n    render() { \n        console.log(\"render child\", this.props.users);\n        return ( \n            <React.Fragment>\n\n           \n                <MDBDataTable\n                    striped\n                    bordered\n                    small\n                    data={this.state.data}\n                />\n\n            </React.Fragment>\n         );\n    }\n}\n\n\n\nexport default PaginationTable;","import React, { Component } from 'react';\nimport \"./SelectTag.scss\"\n\n\nclass SelectTag extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n    render() { \n        return ( \n\n            <select \n                id={this.props.selectId}\n                className={this.props.selectClass}\n                value={this.props.selectValue}\n                onChange={this.props.onChange}\n            >\n                {\n                    this.props.optionArray.map(option => <option key={Math.random()* 100} value={option}>{option}</option>) \n                }      \n            </select>\n            \n        );\n    }\n}\n \nexport default SelectTag;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport InputTag from '../../../ReusableComponent/InputTag';\nimport SelectTag from '../../../ReusableComponent/SelectTag';\nimport \"./UsersTable.scss\";\n\nclass UsersTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n\n    render() { \n        console.log(this.props.selectAll);\n        return ( \n\n            <div className=\"users-table-container\">\n                <table className=\"user-table\">\n                    <thead className=\"table-header\">\n                        <tr className=\"header-row\">\n                            <td>\n                                <div className=\"all-checkbox\" data-tip data-for=\"Select All\" >\n                                    <InputTag\n                                        inputClass=\"checkbox\"\n                                        type=\"checkbox\"\n                                        inputText={this.props.selectAll}\n                                        onClick={() => this.props.onSelectAll()}\n                                    />\n                                </div>\n                            </td>\n                            <td>Actions</td>\n                            <td>Name</td>\n                            <td>Email</td>\n                            <td>Salary</td>\n                            <td>Contact</td>\n                            <td>Status</td>\n                            \n\n                        </tr>\n                    </thead>\n\n                    {this.props.users.length > 0 ? <tbody className=\"table-body\">\n\n                        {this.props.users.map(user => <tr key={user.ID}>\n                            <td>\n                                <div className=\"user-action-btn-checkbox\" data-tip data-for=\"select\" >\n                                    <InputTag\n                                        id={user.ID}\n                                        inputClass=\"checkbox\"\n                                        type=\"checkbox\"\n                                        onClick={() => this.props.onInputClick(user.ID)}\n                                    />\n                                </div>\n                            </td>\n\n                            <td>\n                                <div className=\"action-btn-container\">\n                                    \n\n                                    <Link to={'/dashboard/dashboard-content/action/'+user.ID}>\n                                        <div className=\"user-action-btn-div\"  data-tip data-for=\"edit\" onClick={this.handleClick}>\n                                            <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                                            <button className=\"user-action-button-edit\"></button>\n                                        </div>\n                                    </Link>\n\n                                    <div className=\"user-action-btn-div\"  data-tip data-for=\"delete\" onClick={() => this.props.onClick(user.ID)}>\n                                        <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                                        <button className=\"user-action-button-delete\"></button>\n                                        \n                                    </div>\n\n                                    <div className=\"user-action-btn-div\" data-tip data-for=\"status\" onClick={() => this.props.changeStatus(user.ID)}>\n                                        <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\n                                        <button className=\"user-action-button-status\"></button>\n                                    </div>\n\n                                    <ReactTooltip id=\"Select All\" place=\"top\" effect=\"solid\">\n                                        Select All\n                                    </ReactTooltip>\n\n                                    <ReactTooltip id=\"select\" place=\"top\" effect=\"solid\">\n                                        Select\n                                    </ReactTooltip>\n\n                                    <ReactTooltip id=\"status\" place=\"top\" effect=\"solid\">\n                                        Active/Deactive\n                                    </ReactTooltip>\n\n                                    <ReactTooltip id=\"edit\" place=\"top\" effect=\"solid\">\n                                        Edit\n                                    </ReactTooltip>\n                                    \n                                    <ReactTooltip id=\"delete\" place=\"top\" effect=\"solid\">\n                                        Delete\n                                    </ReactTooltip>\n\n                                    \n                                </div>\n                                \n\n                            </td>\n                            <td>\n                                <div className=\"td-div\">\n\n                                    <div className=\"user-icon-container\">\n                                        <i className=\"fa fa-user user-icon\" aria-hidden=\"true\"></i>\n                                    </div>\n                                    <p>{user.fullName}</p>\n                                </div>\n                            </td>\n\n                            <td>\n                                <div className=\"td-div\">\n\n                                    <div className=\"email-icon-container\">\n                                        <i className=\"fa fa-envelope email-icon\" aria-hidden=\"true\"></i>\n                                    </div>\n                                    <p>{user.email}</p>\n                                </div>\n                            </td>\n\n                            <td>{user.salary}</td>\n\n                            <td>+91{user.contact}</td>\n\n                            <td>\n                                {user.status ? <span className=\"badge badge-success\">Activated</span> : <span className=\"badge badge-danger\">Deactivated</span>}\n                            </td>\n\n                        </tr>)}\n                    </tbody> : <tbody className=\"table-body\">\n                            <tr>\n                                <td colSpan=\"7\" style={{textAlign: \"center\"}}>\n                                    No Records Found\n                                </td>\n                            </tr>\n                        </tbody>\n                    }\n                </table>\n\n                <div className=\"bottom-component-container\">\n\n                    <div className=\"bottom-components\">\n\n                        <div className=\"component-field\">\n                            <label>Rows Per Page</label>   \n                            <SelectTag\n                                selectClass=\"rows-per-page\"\n                                optionArray={[5, 10, 15]}\n                                onChange={this.props.onChange}\n                            /> \n                        </div>\n\n                        <div className=\"component-field\">\n                            <label>Total Records: {this.props.totalRecords}</label>   \n                        </div>\n\n                        <div className=\"component-field\">\n                            <label>Current page: {this.props.currentPage}/{this.props.totalPage}</label>\n                            \n                        </div>\n\n                        <div className=\"angle-field\">\n\n                            <div className=\"angle-icon\" onClick={this.props.prevPage}>\n                                <i className=\"fa fa-angle-left\" aria-hidden=\"true\"></i>  \n                            </div>\n\n                            <div className=\"angle-icon\" onClick={this.props.nextPage}>\n                                <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>  \n                            </div>\n                        </div>\n\n                    </div>\n                    \n\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default UsersTable;","import React, { Component } from 'react';\nimport Button from '../../../ReusableComponent/Button';\nimport SelectTag from '../../../ReusableComponent/SelectTag';\nimport \"./Filter.scss\"\n\nlet optionArrayForSort = [\"--SELECT--\", \"Name\", \"Email\", \"Contact\"]\nlet optionArrayForFilter = [\"--SELECT--\", \"Today\", \"Yesterday\"]\n\nclass Filter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n    componentDidMount(){\n        console.log(\"sort\", this.props.sort);\n        console.log(\"filter\", this.props.filter);\n    }\n\n    render() { \n        console.log(\"sort\", this.props.sort);\n        console.log(\"filter\", this.props.filter);\n        return ( \n            <div className=\"filter-container\">\n\n                <div className=\"filter-content\">\n                    <div className=\"filter-select-tag\">\n                        <div className=\"filter-field-div\">\n                            <label className=\"filter-label\">Sort by</label>\n                            <SelectTag \n                                selectId=\"sort\"\n                                selectClass=\"selectTag\"\n                                selectValue={this.props.sort}\n                                optionArray={optionArrayForSort}\n                                onChange={this.props.handleSort}\n                            />\n                        </div>\n\n                        <div className=\"filter-field-div\">\n                            <label className=\"filter-label\">Filter</label>\n                            <SelectTag \n                                selectId=\"filter\"\n                                selectClass=\"selectTag\"\n                                selectValue={this.props.filter}\n                                optionArray={optionArrayForFilter}\n                                onChange={this.props.handleFilter}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"filter-action-button\">\n                        <Button\n                            btnclass=\"apply-btn\"\n                            btnName=\"Apply\"\n                            onClick={this.props.handleApply}\n                        />\n                        <Button\n                            btnclass=\"clear-btn\"\n                            btnName=\"Clear\"\n                            onClick={this.props.handleClear}\n                        />\n\n                        \n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n \nexport default Filter;","import React, { Component } from 'react';\nimport Button from '../Button';\nimport './ReactPopup.scss'\nimport ReactModal from 'react-modal'\n\nclass ReactPopup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n\n    render() { \n        console.log(\"Show ...... popup\", this.props.open);\n        return ( \n            <ReactModal\n                isOpen={this.props.open}\n                appElement={document.getElementById(\"root\")}\n                className=\"react-popup-modal\"\n                overlayClassName=\"react-modal-overlay\"\n            >\n                <div className=\"react-model-container\">\n\n                    <div className=\"react-model-body\">\n\n                    \n                        <div className=\"react-model-header\">\n                            <div className={this.props.iconDivClass}>\n                                <i className={this.props.iconName} aria-hidden=\"true\"></i>\n                            </div>\n                            \n                        </div>\n\n                        <div className=\"react-model-content\">\n                            <h3>{this.props.modelHeaderText}</h3>\n                            <p>{this.props.modelText}</p>\n                        </div>\n\n                        <div className=\"react-model-footer\">\n\n                            <div className=\"react-model-buttons\">\n                                <Button \n                                    btnclass=\"react-model-btn-cancel\"\n                                    btnName=\"Cancel\"\n                                    onClick={this.props.onCancel}\n                                />\n\n                                <Button \n                                    modelBtnId=\"modelButton\"\n                                    btnclass={this.props.modalPositiveBtn}\n                                    btnName={this.props.modelBtnName}\n                                    onClick={this.props.onDelete}\n                                />\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </ReactModal>\n        );\n    }\n}\n \nexport default ReactPopup;","import React, { Component } from 'react';\nimport './InputTag.scss'\n\nclass InputTag extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            inputText : \"\"\n        };\n    }\n\n    \n    render() {\n        return (\n            <input\n                id={this.props.id} \n                className={this.props.inputClass} \n                type={this.props.type} \n                value={this.props.inputText} \n                placeholder={this.props.placeHolder} \n                onChange={this.props.onChange} \n                onKeyUp={this.props.onKeyUp}\n                disabled={this.props.disabled} \n                onClick={this.props.onClick}\n                name={this.props.name}\n            />\n           \n        );\n    }\n}\n\nexport default InputTag;","import {LOGIN, UPDATE_PROFILE, ADD_USER, UPDATE_USER, DELETE_USER, DELETE_USERS, CHANGE_STATUS, FETCH_USERS} from './actionType'\n\nexport function login(userName, password){\n    // console.log(userName);\n    return{\n        type: LOGIN,\n        payload: {\n            userName,\n            password\n        }\n    }\n}\n\nexport function updateProfile(fullName, email, profileImg){\n    // console.log(userName);\n    return{\n        type: UPDATE_PROFILE,\n        payload: {\n            fullName,\n            email,\n            profileImg\n        }\n    }\n}\n\n\nexport function addUser(fullName, salary, email, contact, avatar){\n    console.log(avatar);\n    return{\n        type: ADD_USER,\n        payload: {\n            fullName,\n            salary,\n            email,\n            contact,\n            avatar\n        }\n    }\n}\n\n\nexport function updateUser(updateId, fullName, salary, email, contact, avatar){\n    \n    return{\n        type: UPDATE_USER,\n        payload: {\n            updateId,\n            fullName,\n            salary,\n            email,\n            contact,\n            avatar\n        }\n    }\n}\n\nexport function deleteUser(deleteId){\n    // console.log(deleteId);\n    return{\n        type: DELETE_USER,\n        payload: deleteId\n    }\n}\n\nexport function deleteUsers(deletedIdArray){\n    // console.log(deleteId);\n    return{\n        type: DELETE_USERS,\n        payload: deletedIdArray\n    }\n}\n\nexport function changeStatus(id){\n    // console.log(deleteId);\n    return{\n        type: CHANGE_STATUS,\n        payload: id\n    }\n}\n\nexport function fetchUsers(fullName, salary, email, contact, avatar){\n    console.log(avatar);\n    return{\n        type: FETCH_USERS,\n    }\n}\n"],"sourceRoot":""}